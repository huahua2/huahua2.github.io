{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/yilia/source/js/pc.js","path":"js/pc.js","modified":0},{"_id":"themes/yilia/source/js/mobile.js","path":"js/mobile.js","modified":0},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":0},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":0},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":0},{"_id":"themes/yilia/source/img/zhihu.png","path":"img/zhihu.png","modified":0},{"_id":"themes/yilia/source/img/wz/2.jpg","path":"img/wz/2.jpg","modified":0},{"_id":"themes/yilia/source/img/wz/1.PNG","path":"img/wz/1.PNG","modified":0},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":0},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":0},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":0},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":0},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":0},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":0},{"_id":"themes/yilia/source/img/mail.png","path":"img/mail.png","modified":0},{"_id":"themes/yilia/source/img/logo.png","path":"img/logo.png","modified":0},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":0},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":0},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":0},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":0},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":0},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":0},{"_id":"themes/yilia/source/img/douban.png","path":"img/douban.png","modified":0},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":0},{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":0},{"_id":"themes/yilia/source/img/author.jpg","path":"img/author.jpg","modified":0},{"_id":"themes/yilia/source/img/1.ico","path":"img/1.ico","modified":0},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/yilia/source/CNAME","path":"CNAME","modified":0},{"_id":"themes/yilia/source/marry/css/index.css","path":"marry/css/index.css","modified":0},{"_id":"themes/yilia/source/marry/index.js","path":"marry/index.js","modified":0},{"_id":"themes/yilia/source/marry/index.html","path":"marry/index.html","modified":0},{"_id":"themes/yilia/source/marry/imgs/img1.jpg","path":"marry/imgs/img1.jpg","modified":0},{"_id":"themes/yilia/source/marry/imgs/img2.jpg","path":"marry/imgs/img2.jpg","modified":0},{"_id":"themes/yilia/source/marry/imgs/wedding.png","path":"marry/imgs/wedding.png","modified":0},{"_id":"themes/yilia/source/marry/imgs/married.png","path":"marry/imgs/married.png","modified":0},{"_id":"themes/yilia/source/marry/imgs/lefticon.png","path":"marry/imgs/lefticon.png","modified":0},{"_id":"themes/yilia/source/marry/css/index.scss","path":"marry/css/index.scss","modified":0},{"_id":"themes/yilia/source/marry/css/index.css.map","path":"marry/css/index.css.map","modified":0}],"Cache":[{"_id":"source/_posts/MarkDown基本语法.md","shasum":"502074a21aaaa5f7656f69c671d0db461dd09bdb","modified":1453878760000},{"_id":"source/_posts/PageSlide.md","shasum":"7a96f5edb18e0af892350b8b0c3f460f8e609ece","modified":1453878760000},{"_id":"source/_posts/css3-background.md","shasum":"65735057558ef0c23f548a4ed7872f7f3e1ce26f","modified":1453878760000},{"_id":"source/_posts/git - 简明指南.md","shasum":"6e419381af746f8360e7b073b8ee81eb73d75f41","modified":1453878760000},{"_id":"source/_posts/hello-world.md","shasum":"e3072d1319cb1418129f8390c23ac49b4c5cb647","modified":1453878760000},{"_id":"source/_posts/hexo发布命令.md","shasum":"c5ee03ced1a33847a2019eb6dcd5436d7ca0ea3a","modified":1453878760000},{"_id":"source/_posts/js闭包使用场景.md","shasum":"ae8541e644994f434d555dab52b34c301ca34c58","modified":1453879538000},{"_id":"source/_posts/rem.md","shasum":"5ce984aa6005423831af0a6ff313f1d0977a21b5","modified":1453878760000},{"_id":"source/_posts/web app之meta.md","shasum":"70a2f12e58a5bfc4e8ba38001cc79cb2ac5f3594","modified":1453878760000},{"_id":"source/_posts/解决Git push时重复输入用户名密码的问题.md","shasum":"2a96fcc330ca8450b464f493434fa3170e46de3d","modified":1453878760000},{"_id":"source/_posts/路漫漫其修远兮.md","shasum":"6c8965145acad56b48122109d5b2f12fb948c6da","modified":1453878760000},{"_id":"themes/yilia/_config.yml","shasum":"866f9d4afb947c5039cbf1d39c9b23649c42faa3","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","shasum":"082504c9fd8600306d4ca55f03e3cbb0ddd99dd7","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","shasum":"8dfb6d68aa8a0661d26c32ce1ce1f45815364c3a","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/archive.ejs","shasum":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/article.ejs","shasum":"ef8dd558f908f293c34123c0b7ff879d2fd0c09f","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/footer.ejs","shasum":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","shasum":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/head.ejs","shasum":"963c106412a3ab142871976978ecc9884aeca17a","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/header.ejs","shasum":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","shasum":"70a9951e4e2d30aabba88e75c3fa54b9235ce6a6","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","shasum":"54fab4d3d64cb937d6baec7324ffabf9f202b883","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","shasum":"cd0af87ee781ac9c2b0e6a2a05b063d4bd497d9c","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","shasum":"d4f0e36f9a2167e91082dbd7d52425a06d2bebbf","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","shasum":"c0c988334e857a77ba455a056dfa21809e7e76a5","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","shasum":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","shasum":"d19dee2082528e1844bed3aa4e4bd59f15fd7a7a","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","shasum":"da39b4ba0c0ce4e1932fd45c5aee10e8aca41f28","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","shasum":"78612cfc091d7d861a70455a0dc8c3036e460879","modified":1453878760000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","shasum":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1453878760000},{"_id":"themes/yilia/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1453878760000},{"_id":"themes/yilia/layout/category.ejs","shasum":"765426a9c8236828dc34759e604cc2c52292835a","modified":1453878760000},{"_id":"themes/yilia/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1453878760000},{"_id":"themes/yilia/layout/layout.ejs","shasum":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1453878760000},{"_id":"themes/yilia/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1453878760000},{"_id":"themes/yilia/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1453878760000},{"_id":"themes/yilia/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1453878760000},{"_id":"themes/yilia/package.json","shasum":"00357ef6f24eb049074da81809e98f973f528cca","modified":1453878760000},{"_id":"themes/yilia/source/CNAME","shasum":"6d71a5daed500ee2bb8253163703840fca80073f","modified":1453878760000},{"_id":"themes/yilia/source/css/_extend.styl","shasum":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/archive.styl","shasum":"b087976b3081b7ca0e2567e47a6c345b1328ad95","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/article.styl","shasum":"7dd9f71e4d80d15d6ce929659c517ee0c883b340","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/footer.styl","shasum":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/header.styl","shasum":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/highlight.styl","shasum":"56830a5100b31663e1f49b36d00e031ec14aae63","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/instagram.styl","shasum":"4de333144b00c58a5d41d682d83f78794f75d19d","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/page.styl","shasum":"97371f551ed051780f8632142ea00a705d76c845","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/mobile-slider.styl","shasum":"96eee8fb0d3f1108eae9a04682d4bbd0e968be22","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/scroll.styl","shasum":"a0bd4b253b28f694de59bec217f48f59f92cbaf2","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/main.styl","shasum":"51a1ad07b7c747af33d08407b0becd640556dd4f","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/mobile.styl","shasum":"b574fe7d3b5913ab66353da3350fd70815def1a5","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/share.styl","shasum":"6ac15a6815b1bbdbea89d3fe933c2821aa80b926","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","shasum":"7aa04be2deea835aeef08e9908c4658cb8933ee2","modified":1453878760000},{"_id":"themes/yilia/source/css/_partial/wheelmenu.styl","shasum":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1453878760000},{"_id":"themes/yilia/source/css/_util/grid.styl","shasum":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1453878760000},{"_id":"themes/yilia/source/css/_util/mixin.styl","shasum":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1453878760000},{"_id":"themes/yilia/source/css/_variables.styl","shasum":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1453878760000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","shasum":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1453878760000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","shasum":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1453878760000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","shasum":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1453878760000},{"_id":"themes/yilia/source/css/style.styl","shasum":"67cd4b3df4e36f80b4ba40ce97722b19480c753e","modified":1453878760000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","shasum":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","shasum":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1453878760000},{"_id":"themes/yilia/source/img/1.ico","shasum":"bbc1390da9b20841c2738d33d4fd31a17d6d071f","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1453878760000},{"_id":"themes/yilia/source/img/delicious.png","shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1453878760000},{"_id":"themes/yilia/source/img/coderwall.png","shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1453878760000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","shasum":"a82597493d75ea989ca586e09173cff332efe41e","modified":1453878760000},{"_id":"themes/yilia/source/img/douban.png","shasum":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1453878760000},{"_id":"themes/yilia/source/img/facebook.png","shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1453878760000},{"_id":"themes/yilia/source/img/github.png","shasum":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1453878760000},{"_id":"themes/yilia/source/img/google.png","shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1453878760000},{"_id":"themes/yilia/source/img/img-err.png","shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1453878760000},{"_id":"themes/yilia/source/img/img-loading.png","shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1453878760000},{"_id":"themes/yilia/source/img/linkedin.png","shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1453878760000},{"_id":"themes/yilia/source/img/mail.png","shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1453878760000},{"_id":"themes/yilia/source/img/logo.png","shasum":"aa122ac8a622714f6890d40a61978d98759e2bd7","modified":1453878760000},{"_id":"themes/yilia/source/img/pinboard.png","shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1453878760000},{"_id":"themes/yilia/source/img/pinterest.png","shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1453878760000},{"_id":"themes/yilia/source/img/rss.png","shasum":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1453878760000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1453878760000},{"_id":"themes/yilia/source/img/stackoverflow.png","shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1453878760000},{"_id":"themes/yilia/source/img/twitter.png","shasum":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1453878760000},{"_id":"themes/yilia/source/img/weibo.png","shasum":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1453878760000},{"_id":"themes/yilia/source/img/zhihu.png","shasum":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1453878760000},{"_id":"themes/yilia/source/js/instagram.js","shasum":"f19adbcc0dac33536bc6660598059048ec901882","modified":1453878760000},{"_id":"themes/yilia/source/js/jquery.lazyload.js","shasum":"c11a2e7b330d16d06feabd0a8477099adf9d6799","modified":1453878760000},{"_id":"themes/yilia/source/js/main.js","shasum":"0640b68a76fab3c693b3cd1e4d04d14be1e53940","modified":1453878760000},{"_id":"themes/yilia/source/js/mobile.js","shasum":"b68cc01d24e80973c48205f551da87f3f3427644","modified":1453878760000},{"_id":"themes/yilia/source/js/pc.js","shasum":"fdbc039fc9ffa70815b5fc4daaa587ae29693f10","modified":1453878760000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","shasum":"23a6f5b2ff76de9cb3cf1e886194c67647fd868a","modified":1453878760000},{"_id":"themes/yilia/source/img/wz/1.PNG","shasum":"7afa8093b1fe17420e8f223b1563988b185df6b0","modified":1453878760000},{"_id":"themes/yilia/source/img/author.jpg","shasum":"8600ada8cd34b8b743fed8a8b8a94dccee33b69e","modified":1453878760000},{"_id":"themes/yilia/source/img/wz/2.jpg","shasum":"f92eb19d08dab6c2a785db150557f7983d69a16d","modified":1453878760000},{"_id":"public/js/pc.js","modified":1453879345832,"shasum":"fdbc039fc9ffa70815b5fc4daaa587ae29693f10"},{"_id":"public/js/mobile.js","modified":1453879345836,"shasum":"b68cc01d24e80973c48205f551da87f3f3427644"},{"_id":"public/js/main.js","modified":1453879345839,"shasum":"0640b68a76fab3c693b3cd1e4d04d14be1e53940"},{"_id":"public/js/jquery.lazyload.js","modified":1453879345842,"shasum":"c11a2e7b330d16d06feabd0a8477099adf9d6799"},{"_id":"public/js/instagram.js","modified":1453879345845,"shasum":"f19adbcc0dac33536bc6660598059048ec901882"},{"_id":"public/img/zhihu.png","modified":1453879345849,"shasum":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d"},{"_id":"public/img/wz/2.jpg","modified":1453879345853,"shasum":"f92eb19d08dab6c2a785db150557f7983d69a16d"},{"_id":"public/img/wz/1.PNG","modified":1453879345857,"shasum":"7afa8093b1fe17420e8f223b1563988b185df6b0"},{"_id":"public/img/weibo.png","modified":1453879345863,"shasum":"280dae3fd38086158b4a1b57edb94c06b1a5014b"},{"_id":"public/img/twitter.png","modified":1453879345868,"shasum":"14dbb8e62d056525253bc0de13acd1723da7a934"},{"_id":"public/img/stackoverflow.png","modified":1453879345870,"shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2"},{"_id":"public/img/scrollbar_arrow.png","modified":1453879345872,"shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0"},{"_id":"public/img/rss.png","modified":1453879345877,"shasum":"430fd47340e75214c081abd05cd7410cf7c71b86"},{"_id":"public/img/pinterest.png","modified":1453879345881,"shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630"},{"_id":"public/img/pinboard.png","modified":1453879345883,"shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0"},{"_id":"public/img/mail.png","modified":1453879345885,"shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7"},{"_id":"public/img/logo.png","modified":1453879345887,"shasum":"aa122ac8a622714f6890d40a61978d98759e2bd7"},{"_id":"public/img/linkedin.png","modified":1453879345890,"shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c"},{"_id":"public/img/img-loading.png","modified":1453879345894,"shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031"},{"_id":"public/img/img-err.png","modified":1453879345897,"shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b"},{"_id":"public/img/google.png","modified":1453879345901,"shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d"},{"_id":"public/img/github.png","modified":1453879345915,"shasum":"b84d03b32fa388dcbf149296ebd16dce6223d48d"},{"_id":"public/img/facebook.png","modified":1453879345917,"shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54"},{"_id":"public/img/douban.png","modified":1453879345919,"shasum":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e"},{"_id":"public/img/delicious.png","modified":1453879345922,"shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd"},{"_id":"public/img/coderwall.png","modified":1453879345927,"shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331"},{"_id":"public/img/author.jpg","modified":1453879345931,"shasum":"8600ada8cd34b8b743fed8a8b8a94dccee33b69e"},{"_id":"public/img/1.ico","modified":1453879345934,"shasum":"bbc1390da9b20841c2738d33d4fd31a17d6d071f"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1453879345938,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1453879345941,"shasum":"a82597493d75ea989ca586e09173cff332efe41e"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1453879345943,"shasum":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1453879345945,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1453879345948,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1453879345951,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1453879345953,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1453879345954,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1453879345957,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1453879345960,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1453879345963,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1453879345968,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1453879345972,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1453879345975,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1453879345977,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1453879346630,"shasum":"8977715b13a33e384b9258534fd582848d7ee1f7"},{"_id":"public/css/fonts/fontawesome-webfont.woff","modified":1453879346827,"shasum":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832"},{"_id":"public/css/fonts/fontawesome-webfont.ttf","modified":1453879346831,"shasum":"1480b8101b02da9bc4c60341b5e185e63e585064"},{"_id":"public/css/fonts/fontawesome-webfont.svgz","modified":1453879346833,"shasum":"4bfdd33ed702e32ae01399fcc2652377f78e7626"},{"_id":"public/css/fonts/fontawesome-webfont.svg","modified":1453879346835,"shasum":"23a6f5b2ff76de9cb3cf1e886194c67647fd868a"},{"_id":"public/css/fonts/fontawesome-webfont.eot","modified":1453879346837,"shasum":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6"},{"_id":"public/CNAME","modified":1453879346838,"shasum":"6d71a5daed500ee2bb8253163703840fca80073f"},{"_id":"public/2016/01/27/js闭包使用场景/index.html","modified":1453879554793,"shasum":"1e838535ce03fa92cd0e73d1e8907880dd1a0ec0"},{"_id":"public/2015/08/12/路漫漫其修远兮/index.html","modified":1453879346964,"shasum":"477be01ce46fd9d9e54587bcd278e10b7637dc45"},{"_id":"public/2015/08/07/PageSlide/index.html","modified":1453879346997,"shasum":"a4c032e4c350c6bd5bed90369fa416dc8323e2fc"},{"_id":"public/2015/08/05/web app之meta/index.html","modified":1453879347039,"shasum":"06700bdc9148507d0f7f2a79330deb5fe5d91224"},{"_id":"public/2015/08/05/css3-background/index.html","modified":1453879347071,"shasum":"fabbd040efb172cfeb28cad207018090bc0480be"},{"_id":"public/2015/08/03/解决Git push时重复输入用户名密码的问题/index.html","modified":1453879347114,"shasum":"cffe3e6a3d17c4cdb9f10c72e93f85e3103af802"},{"_id":"public/2015/07/10/rem/index.html","modified":1453879347148,"shasum":"f3797f849418c3141501e91690bb6edccae2419b"},{"_id":"public/2015/07/05/hexo发布命令/index.html","modified":1453879347181,"shasum":"c09c382397743d7c9c35eadb9e0ec872af8d2c5b"},{"_id":"public/2015/07/05/git - 简明指南/index.html","modified":1453879347232,"shasum":"a4ed0b9ff7069e47de3fdc4d57808253856ea553"},{"_id":"public/2015/04/05/MarkDown基本语法/index.html","modified":1453879347262,"shasum":"e6ea61e46f1364076dd43b017928d081123cfe14"},{"_id":"public/2014/12/02/hello-world/index.html","modified":1453879347291,"shasum":"8a4f162b8c44be5b6688a260e4816299d1b18228"},{"_id":"public/categories/学习笔记/index.html","modified":1453879347389,"shasum":"a440261948b167145ecc04d9baa4269e30655ca9"},{"_id":"public/categories/日志/index.html","modified":1453879347420,"shasum":"205e498af416955434ddb20642e9b70f910b05a2"},{"_id":"public/categories/项目实战/index.html","modified":1453879347444,"shasum":"a5aaf12dc029f2ce46d5a54556705399da9df055"},{"_id":"public/archives/index.html","modified":1453879347544,"shasum":"551b366b1fe283008ac0ee8ddc26acfa39db74c9"},{"_id":"public/archives/page/2/index.html","modified":1453879347589,"shasum":"ee0fc052f68d53abb2bff55a1e53902da80d8d68"},{"_id":"public/archives/2014/index.html","modified":1453879347612,"shasum":"fa86ad80953b54e8cba0f89a16cafb6773d33d21"},{"_id":"public/archives/2014/12/index.html","modified":1453879347637,"shasum":"1760d5efecac43f4bb1d8aa892673de46f4d8389"},{"_id":"public/archives/2015/index.html","modified":1453879347732,"shasum":"b4ca1c8cf5e81024dc3b84899bc5a1b374a6b0f5"},{"_id":"public/archives/2015/page/2/index.html","modified":1453879347757,"shasum":"c3b5b75453a6b4143991572b275deb7c159e366d"},{"_id":"public/archives/2015/04/index.html","modified":1453879347784,"shasum":"71f05ad2dfe4a02008572cef448de7223a992d78"},{"_id":"public/archives/2015/07/index.html","modified":1453879347837,"shasum":"e0e0e6c86bb85d363acce297de720ebb21264fa3"},{"_id":"public/archives/2015/08/index.html","modified":1453879347894,"shasum":"92d8eab3f95fe9928794e3fd9b8a5eee06ad443a"},{"_id":"public/archives/2016/index.html","modified":1453879347919,"shasum":"5c50f9a0ce33305fb7a27f16a65d4c7e8e92b584"},{"_id":"public/archives/2016/01/index.html","modified":1453879347957,"shasum":"9b468462f6fc7411d1894e2223c134d489d9e2fd"},{"_id":"public/index.html","modified":1453879555640,"shasum":"927477c0e3915d08b4a249303575cd84d4d51785"},{"_id":"public/page/2/index.html","modified":1453879348104,"shasum":"280b215e6519e6b643e7c03281ab9af0af54ac3c"},{"_id":"public/tags/markdown/index.html","modified":1453879348132,"shasum":"c4b2992ea5273bb3cead236e0d16083bcf0f9715"},{"_id":"public/tags/Hexo/index.html","modified":1453879348185,"shasum":"b3a9629b9e12d148747d4362ebc91e69444ed84a"},{"_id":"public/tags/随笔/index.html","modified":1453879348212,"shasum":"641ea7cd7ca651690139b6f8ec2feaa6d6c2a694"},{"_id":"public/tags/git/index.html","modified":1453879348252,"shasum":"734ad5c79517119efcbcc0a80a6b1920321538f2"},{"_id":"public/tags/webapp/index.html","modified":1453879348307,"shasum":"5246116887c0163bc55311dc87fac265c948e06a"},{"_id":"public/tags/js/index.html","modified":1453879348338,"shasum":"148543331145183dc2fb0847db712a12964ce163"},{"_id":"public/tags/hello-world/index.html","modified":1453879348370,"shasum":"eb45d7c031f3f04e2cd61a712f7ed472d5cc2cf4"},{"_id":"public/tags/css3/index.html","modified":1453879348417,"shasum":"b753cb50c1c6a6b20f354cc333e7ddd397869234"},{"_id":"themes/yilia/source/marry/css/index.css","shasum":"1c216832bb7856f5457a91de4971c1d3e67dd216","modified":1453878540000},{"_id":"themes/yilia/source/marry/css/index.css.map","shasum":"ff508959c3bba6035c9c40b4b0315eaf4dc10a19","modified":1453878540000},{"_id":"themes/yilia/source/marry/css/index.scss","shasum":"54cd24f0a896c1f527fb8b2bedef632ee285f4e6","modified":1453878540000},{"_id":"themes/yilia/source/marry/imgs/lefticon.png","shasum":"17024feb9aeb5669659e5e00af90886b45b05fdb","modified":1453878540000},{"_id":"themes/yilia/source/marry/imgs/married.png","shasum":"a88b1fc898f0733397e20d6686d3c0763523e8fd","modified":1453878540000},{"_id":"themes/yilia/source/marry/imgs/wedding.png","shasum":"3106fa20a0965496e1db32f410d5ca642822d2d5","modified":1453878540000},{"_id":"themes/yilia/source/marry/imgs/img2.jpg","shasum":"7c6de4b1a133321e3f40b84b7785ebac0a2c2e30","modified":1453878540000},{"_id":"themes/yilia/source/marry/imgs/img1.jpg","shasum":"a9830263da0cc55a69b4d5de8627e4d2f66e35a2","modified":1453878540000},{"_id":"themes/yilia/source/marry/index.html","shasum":"0b26412f7d11a9e9242dfee38f64d777ed3096c5","modified":1453878540000},{"_id":"themes/yilia/source/marry/index.js","shasum":"672e310b4228e0dc91a5dffd70145529f1f83367","modified":1453878540000},{"_id":"public/marry/css/index.css","modified":1453879992097,"shasum":"1c216832bb7856f5457a91de4971c1d3e67dd216"},{"_id":"public/marry/index.js","modified":1453879992101,"shasum":"672e310b4228e0dc91a5dffd70145529f1f83367"},{"_id":"public/marry/index.html","modified":1453879992106,"shasum":"0b26412f7d11a9e9242dfee38f64d777ed3096c5"},{"_id":"public/marry/imgs/img1.jpg","modified":1453879992116,"shasum":"a9830263da0cc55a69b4d5de8627e4d2f66e35a2"},{"_id":"public/marry/imgs/img2.jpg","modified":1453879992122,"shasum":"7c6de4b1a133321e3f40b84b7785ebac0a2c2e30"},{"_id":"public/marry/imgs/wedding.png","modified":1453879992125,"shasum":"3106fa20a0965496e1db32f410d5ca642822d2d5"},{"_id":"public/marry/imgs/married.png","modified":1453879992129,"shasum":"a88b1fc898f0733397e20d6686d3c0763523e8fd"},{"_id":"public/marry/imgs/lefticon.png","modified":1453879992133,"shasum":"17024feb9aeb5669659e5e00af90886b45b05fdb"},{"_id":"public/marry/css/index.scss","modified":1453879992135,"shasum":"54cd24f0a896c1f527fb8b2bedef632ee285f4e6"},{"_id":"public/marry/css/index.css.map","modified":1453879992140,"shasum":"ff508959c3bba6035c9c40b4b0315eaf4dc10a19"}],"Category":[{"name":"学习笔记","_id":"cijwi82hk0001h7kxwosdhlqm"},{"name":"日志","_id":"cijwi82i70008h7kxkfdmlhun"},{"name":"项目实战","_id":"cijwi82ja0017h7kx7eej8y50"}],"Data":[],"Page":[],"Post":[{"title":"Hexo中MarkDonw基本语法","date":"2015-04-05T14:44:00.000Z","_content":"\n标题\n```markdown\n### 我是标题\n```\n<!--more-->\n加粗\n```markdown\n**1、关于APP。**\n```\n\n多排显示\n```markdown\n>1.\n>2.\n>3.\n```\n\n图片\n```markdown\n![img](http://12.jpg)\n```\n\n代码块\n```markdown\n  代码块开头写三个`号+语言名称，然后结束再写三个`号\n```\n\n文字加背景色 \n```markdown\n  在文字两边加一个`号\n```\n  \n在行首加点\n```markdown\n 行首输入*，空格后输入内容即可\n```","source":"_posts/MarkDown基本语法.md","raw":"title: Hexo中MarkDonw基本语法\ndate: 2015-4-5 22:44\ntags:\n- markdown\n- Hexo\ncategories: 学习笔记\n---\n\n标题\n```markdown\n### 我是标题\n```\n<!--more-->\n加粗\n```markdown\n**1、关于APP。**\n```\n\n多排显示\n```markdown\n>1.\n>2.\n>3.\n```\n\n图片\n```markdown\n![img](http://12.jpg)\n```\n\n代码块\n```markdown\n  代码块开头写三个`号+语言名称，然后结束再写三个`号\n```\n\n文字加背景色 \n```markdown\n  在文字两边加一个`号\n```\n  \n在行首加点\n```markdown\n 行首输入*，空格后输入内容即可\n```","slug":"MarkDown基本语法","published":1,"updated":"2016-01-27T07:12:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijwi82he0000h7kxwtoolcle"},{"title":"路漫漫其修远兮","date":"2015-08-12T03:25:00.000Z","_content":"\n前端的路遥远而精彩，当你的脚步跟不上你的灵魂时，<Br>就应该静下心来学习, 收藏一张前端开发知识网络图。\n<!--more-->\n![img](/img/wz/2.jpg)\n","source":"_posts/路漫漫其修远兮.md","raw":"title: 路漫漫其修远兮  \ndate: 2015-08-12 11:25\ntags:\n- 随笔\ncategories: 日志\n---\n\n前端的路遥远而精彩，当你的脚步跟不上你的灵魂时，<Br>就应该静下心来学习, 收藏一张前端开发知识网络图。\n<!--more-->\n![img](/img/wz/2.jpg)\n","slug":"路漫漫其修远兮","published":1,"updated":"2016-01-27T07:12:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijwi82i50007h7kxvzf0hmvu"},{"title":"解决Git push时重复输入用户名密码的问题","date":"2015-08-02T16:00:00.000Z","_content":"在windows上使用git来push到github服务器的时候，每次都需要填写用户名/邮箱、密码，很麻烦。最近用hexo写博客，需要频繁的push，每次执行hexo deploy都需要输入用户名、密码验证，不胜其烦，以下方法可以解决。\n<!--more-->\n\n### 1.首先添加环境变量：\n\n<img src=\"http://ww2.sinaimg.cn/large/5e8cb366jw1e51yjjv0okj20b00b5gmp.jpg\" alt=\"\">\n\n### 2.在用户文件夹如`C:\\Users\\zhangsan`下新建一个名为`_netrc`的文件\n\n### 3.编辑该文件：\n``` bash\nmachine github.com\nlogin zhangsan\npassword 123456\n```\n\n","source":"_posts/解决Git push时重复输入用户名密码的问题.md","raw":"title: 解决Git push时重复输入用户名密码的问题\ndate: 2015-8-3\ntags:\n- Hexo\n- git\ncategories: 学习笔记\n---\n在windows上使用git来push到github服务器的时候，每次都需要填写用户名/邮箱、密码，很麻烦。最近用hexo写博客，需要频繁的push，每次执行hexo deploy都需要输入用户名、密码验证，不胜其烦，以下方法可以解决。\n<!--more-->\n\n### 1.首先添加环境变量：\n\n<img src=\"http://ww2.sinaimg.cn/large/5e8cb366jw1e51yjjv0okj20b00b5gmp.jpg\" alt=\"\">\n\n### 2.在用户文件夹如`C:\\Users\\zhangsan`下新建一个名为`_netrc`的文件\n\n### 3.编辑该文件：\n``` bash\nmachine github.com\nlogin zhangsan\npassword 123456\n```\n\n","slug":"解决Git push时重复输入用户名密码的问题","published":1,"updated":"2016-01-27T07:12:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijwi82ia000ch7kxqfjey7fe"},{"title":"web app之meta","date":"2015-08-05T14:44:00.000Z","_content":"\n### meta标签\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no, minimal-ui\" />\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n<meta name=\"format-detection\"content=\"telephone=no, email=no\" />\n```\n<!--more-->\n### viewport\n视图窗口，移动端特属的标签。一般使用下面这段代码即可：\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no, minimal-ui\" />\n```\n\n上面的代码依次表示设置宽度为设备的宽度，默认不缩放，不允许用户缩放（即禁止缩放），在网页加载时隐藏地址栏与导航栏（ios7.1新增）。\n\n>width – <span class=\"comment\"><span class=\"comment\">// [pixel_value | device-width] viewport 的宽度，范围从 200 到 10,000，默认为 980 像素</span></span>\n> height – <span class=\"comment\"><span class=\"comment\">// [pixel_value | device-height ] viewport 的高度，范围从 223 到 10,000 </span></span>\n> initial-scale – <span class=\"comment\"><span class=\"comment\">// float_value，初始的缩放比例 （范围从 &gt; 0 到 10）</span></span>\n> minimum-scale – <span class=\"comment\"><span class=\"comment\">// float_value，允许用户缩放到的最小比例</span></span>\n> maximum-scale – <span class=\"comment\"><span class=\"comment\">// float_value，允许用户缩放到的最大比例</span></span>\n> user-scalable – <span class=\"comment\"><span class=\"comment\">// [yes | no] 用户是否可以手动缩放</span></span>\n>target-densitydpi = [dpi_value | device-dpi | high-dpi | medium-dpi | low-dpi] 目标屏幕像素密度\n   \n\n注：target-densitydpi屏幕像素密度和缩放有关，你可以试试修改这个[demo](http://jsbin.com/ceqexapa/8)，用手机看下实际效果。我一般不设置这个属性。\n\n### apple-mobile-web-app-capable\n\n  是否启动webapp功能，会删除默认的苹果工具栏和菜单栏。\n\n```html\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n```\n\n### apple-mobile-web-app-status-bar-style\n\n当启动webapp功能时，显示手机信号、时间、电池的顶部导航栏的颜色。默认值为default（白色），可以定为black（黑色）和black-translucent（灰色半透明）。这个主要是根据实际的页面设计的主体色为搭配来进行设置。\n\n```html\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n```\n\n注：如果对`apple-mobile-web-app-capable`和`apple-mobile-web-app-status-bar-style`不太理解，可查阅下面的参考资料第三篇文章，里面有截图说明。\n\n### telephone &amp; email\n\n忽略页面中的数字识别为电话号码\n\n   ```html\n   <meta name=\"format-detection\" content=\"telephone=no\" />\n   ```\n\n同样还有一个email识别\n\n   ```html\n   <meta name=\"format-detection\" content=\"email=no\" />\n   ```\n\n当然两者可以写在一起\n ```html\n  <meta name=\"format-detection\" content=\"telphone=no, email=no\" />\n```\n### 其他meta\n\n   ```html\n   <!-- 启用360浏览器的极速模式(webkit) -->\n   <meta name=\"renderer\" content=\"webkit\">\n   <!-- 避免IE使用兼容模式 -->\n   <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n   <!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 -->\n   <meta name=\"HandheldFriendly\" content=\"true\">\n   <!-- 微软的老式浏览器 -->\n   <meta name=\"MobileOptimized\" content=\"320\">\n   <!-- uc强制竖屏 -->\n   <meta name=\"screen-orientation\" content=\"portrait\">\n   <!-- QQ强制竖屏 -->\n   <meta name=\"x5-orientation\" content=\"portrait\">\n   <!-- UC强制全屏 -->\n   <meta name=\"full-screen\" content=\"yes\">\n   <!-- QQ强制全屏 -->\n   <meta name=\"x5-fullscreen\" content=\"true\">\n   <!-- UC应用模式 -->\n   <meta name=\"browsermode\" content=\"application\">\n   <!-- QQ应用模式 -->\n   <meta name=\"x5-page-mode\" content=\"app\">\n   <!-- windows phone 点击无高光 -->\n   <meta name=\"msapplication-tap-highlight\" content=\"no\">\n   ```\n\n参考资料：\n\n*   [Supported Meta Tags section of the Safari HTML Reference](https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html)\n*   [移动前端工作的那些事---前端制作篇之meta标签篇](http://blog.sina.com.cn/s/blog_3f1fc8950101fz2v.html)\n*   [移动平台的meta标签-----神奇的功效](http://blog.sina.com.cn/s/blog_6d48e77101015kqr.html)\n*   [WebApp之Meta标签](http://www.haogongju.net/art/2709254)\n\n## link标签\n\n### apple-touch-icon\n\n如果`apple-mobile-web-app-capable`设置为`yes`了，那么在iPhone,iPad,iTouch的safari上可以使用添加到主屏按钮将网站添加到主屏幕上。而通过设置相应`apple-touch-icon`标签，则添加到主屏上的图标就会使用我们指定的图片。\n\n以下是针对ox不同设备，选择一个最优icon。默认iphone的大小为60px，ipad为76px，retina屏乘以2倍。\n\n   ```html\n  <link rel=\"apple-touch-icon\" href=\"touch-icon-iphone.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"touch-icon-ipad.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"touch-icon-iphone-retina.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"touch-icon-ipad-retina.png\">\n   ```\n\nios7以前系统默认会对图标添加特效（圆角及高光），如果不希望系统添加特效，则可以用`apple-touch-icon-precomposed.png`代替`apple-touch-icon.png`\n\n图标使用的优先级如下：\n\n*   如果没有跟相应设备推荐尺寸一致的图标，那个会优先使用比推荐尺寸大，但最接近推荐尺寸的图标。\n*   如果没有比推荐尺寸大的图标，会优先选择最接近推荐尺寸的图标。\n*   如些有多个图标符合推荐尺寸，会优先选择包含关键字precomposed的图标。\n\n    如果未在区域指定用link标签指定图标，会自动搜索网站根目录下以`apple-touch-icon`为前缀的png图标。\n\n    注：ios7不再为icon添加特效，ios7以前则默认为icon添加特效，除非icon有关键字`-precomposed.png`为后缀。\n\n 参考资料：\n\n*   [Specifying a Webpage Icon for Web Clip](https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html)\n*   [WebApp之 apple-touch-icon](http://blog.sina.com.cn/s/blog_5a073f0f01014jfc.html)\n*   [http://taylor.fausak.me/2013/11/01/ios-7-web-apps/](http://taylor.fausak.me/2013/11/01/ios-7-web-apps/)\n\n### apple-touch-startup-image\n\n同样基于`apple-mobile-web-app-capable`设置为`yes`，可以用WebApp设置一个类似NativeApp的启动画面。\n\n```html\n   <link rel=\"apple-touch-startup-image\" href=\"/startup.png\">\n```\n\n和`apple-touch-icon`不同，`apple-mobile-web-app-capable`不支持sizes属性，所以使用media来控制retina和横竖屏加载不同的启动画面。\n\n```html\n   // iPhone\n   <link href=\"apple-touch-startup-image-320x460.png\" media=\"(device-width: 320px)\" rel=\"apple-touch-startup-image\" />\n   \n   // iPhone Retina\n   <link href=\"apple-touch-startup-image-640x920.png\" media=\"(device-width: 320px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n   \n   // iPhone 5\n   <link rel=\"apple-touch-startup-image\" media=\"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\" href=\"apple-touch-startup-image-640x1096.png\">\n   \n   // iPad portrait\n   <link href=\"apple-touch-startup-image-768x1004.png\" media=\"(device-width: 768px) and (orientation: portrait)\" rel=\"apple-touch-startup-image\" />\n   \n   // iPad landscape\n   <link href=\"apple-touch-startup-image-748x1024.png\" media=\"(device-width: 768px) and (orientation: landscape)\" rel=\"apple-touch-startup-image\" />\n   \n   // iPad Retina portrait\n   <link href=\"apple-touch-startup-image-1536x2008.png\" media=\"(device-width: 1536px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n   \n   // iPad Retina landscape\n   <link href=\"apple-touch-startup-image-1496x2048.png\"media=\"(device-width: 1536px)  and (orientation: landscape) and (-webkit-device-pixel-ratio: 2)\"rel=\"apple-touch-startup-image\" />\n```\n\n参考资料：\n\n*   [Launch Images](https://developer.apple.com/library/safari/documentation/UserExperience/Conceptual/MobileHIG/LaunchImages.html#//apple_ref/doc/uid/TP40006556-CH22-SW1)\n*   [iOS Web App Icons &amp; Startup Images](http://taylor.fausak.me/2012/03/27/ios-web-app-icons-and-startup-images/)\n*   [iPhone 5 Web App Startup Image](http://taylor.fausak.me/2012/09/20/iphone-5-web-app-startup-image/)\n\n### 总结\n\n空白页面模板，然后再根据具体情况在此基础上添加apple-touch-icon和apple-touch-startup-image\n\n```html\n<!DOCTYPE html>\n    <html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no, minimal-ui\" />\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n        <meta name=\"format-detection\"content=\"telephone=no, email=no\" />\n        <title>Document</title>\n    </head>\n    <body>  \n    </body>\n    </html>\n```\n<br>\n转自：[http://www.w3cplus.com/mobile/mobile-terminal-refactoring-create-page.html](http://www.w3cplus.com/mobile/mobile-terminal-refactoring-create-page.html)\n","source":"_posts/web app之meta.md","raw":"title: web app之meta\ndate: 2015-8-5 22:44\ntags:\n- webapp\ncategories: 学习笔记\n---\n\n### meta标签\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no, minimal-ui\" />\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n<meta name=\"format-detection\"content=\"telephone=no, email=no\" />\n```\n<!--more-->\n### viewport\n视图窗口，移动端特属的标签。一般使用下面这段代码即可：\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no, minimal-ui\" />\n```\n\n上面的代码依次表示设置宽度为设备的宽度，默认不缩放，不允许用户缩放（即禁止缩放），在网页加载时隐藏地址栏与导航栏（ios7.1新增）。\n\n>width – <span class=\"comment\"><span class=\"comment\">// [pixel_value | device-width] viewport 的宽度，范围从 200 到 10,000，默认为 980 像素</span></span>\n> height – <span class=\"comment\"><span class=\"comment\">// [pixel_value | device-height ] viewport 的高度，范围从 223 到 10,000 </span></span>\n> initial-scale – <span class=\"comment\"><span class=\"comment\">// float_value，初始的缩放比例 （范围从 &gt; 0 到 10）</span></span>\n> minimum-scale – <span class=\"comment\"><span class=\"comment\">// float_value，允许用户缩放到的最小比例</span></span>\n> maximum-scale – <span class=\"comment\"><span class=\"comment\">// float_value，允许用户缩放到的最大比例</span></span>\n> user-scalable – <span class=\"comment\"><span class=\"comment\">// [yes | no] 用户是否可以手动缩放</span></span>\n>target-densitydpi = [dpi_value | device-dpi | high-dpi | medium-dpi | low-dpi] 目标屏幕像素密度\n   \n\n注：target-densitydpi屏幕像素密度和缩放有关，你可以试试修改这个[demo](http://jsbin.com/ceqexapa/8)，用手机看下实际效果。我一般不设置这个属性。\n\n### apple-mobile-web-app-capable\n\n  是否启动webapp功能，会删除默认的苹果工具栏和菜单栏。\n\n```html\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n```\n\n### apple-mobile-web-app-status-bar-style\n\n当启动webapp功能时，显示手机信号、时间、电池的顶部导航栏的颜色。默认值为default（白色），可以定为black（黑色）和black-translucent（灰色半透明）。这个主要是根据实际的页面设计的主体色为搭配来进行设置。\n\n```html\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n```\n\n注：如果对`apple-mobile-web-app-capable`和`apple-mobile-web-app-status-bar-style`不太理解，可查阅下面的参考资料第三篇文章，里面有截图说明。\n\n### telephone &amp; email\n\n忽略页面中的数字识别为电话号码\n\n   ```html\n   <meta name=\"format-detection\" content=\"telephone=no\" />\n   ```\n\n同样还有一个email识别\n\n   ```html\n   <meta name=\"format-detection\" content=\"email=no\" />\n   ```\n\n当然两者可以写在一起\n ```html\n  <meta name=\"format-detection\" content=\"telphone=no, email=no\" />\n```\n### 其他meta\n\n   ```html\n   <!-- 启用360浏览器的极速模式(webkit) -->\n   <meta name=\"renderer\" content=\"webkit\">\n   <!-- 避免IE使用兼容模式 -->\n   <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n   <!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 -->\n   <meta name=\"HandheldFriendly\" content=\"true\">\n   <!-- 微软的老式浏览器 -->\n   <meta name=\"MobileOptimized\" content=\"320\">\n   <!-- uc强制竖屏 -->\n   <meta name=\"screen-orientation\" content=\"portrait\">\n   <!-- QQ强制竖屏 -->\n   <meta name=\"x5-orientation\" content=\"portrait\">\n   <!-- UC强制全屏 -->\n   <meta name=\"full-screen\" content=\"yes\">\n   <!-- QQ强制全屏 -->\n   <meta name=\"x5-fullscreen\" content=\"true\">\n   <!-- UC应用模式 -->\n   <meta name=\"browsermode\" content=\"application\">\n   <!-- QQ应用模式 -->\n   <meta name=\"x5-page-mode\" content=\"app\">\n   <!-- windows phone 点击无高光 -->\n   <meta name=\"msapplication-tap-highlight\" content=\"no\">\n   ```\n\n参考资料：\n\n*   [Supported Meta Tags section of the Safari HTML Reference](https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html)\n*   [移动前端工作的那些事---前端制作篇之meta标签篇](http://blog.sina.com.cn/s/blog_3f1fc8950101fz2v.html)\n*   [移动平台的meta标签-----神奇的功效](http://blog.sina.com.cn/s/blog_6d48e77101015kqr.html)\n*   [WebApp之Meta标签](http://www.haogongju.net/art/2709254)\n\n## link标签\n\n### apple-touch-icon\n\n如果`apple-mobile-web-app-capable`设置为`yes`了，那么在iPhone,iPad,iTouch的safari上可以使用添加到主屏按钮将网站添加到主屏幕上。而通过设置相应`apple-touch-icon`标签，则添加到主屏上的图标就会使用我们指定的图片。\n\n以下是针对ox不同设备，选择一个最优icon。默认iphone的大小为60px，ipad为76px，retina屏乘以2倍。\n\n   ```html\n  <link rel=\"apple-touch-icon\" href=\"touch-icon-iphone.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"touch-icon-ipad.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"touch-icon-iphone-retina.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"touch-icon-ipad-retina.png\">\n   ```\n\nios7以前系统默认会对图标添加特效（圆角及高光），如果不希望系统添加特效，则可以用`apple-touch-icon-precomposed.png`代替`apple-touch-icon.png`\n\n图标使用的优先级如下：\n\n*   如果没有跟相应设备推荐尺寸一致的图标，那个会优先使用比推荐尺寸大，但最接近推荐尺寸的图标。\n*   如果没有比推荐尺寸大的图标，会优先选择最接近推荐尺寸的图标。\n*   如些有多个图标符合推荐尺寸，会优先选择包含关键字precomposed的图标。\n\n    如果未在区域指定用link标签指定图标，会自动搜索网站根目录下以`apple-touch-icon`为前缀的png图标。\n\n    注：ios7不再为icon添加特效，ios7以前则默认为icon添加特效，除非icon有关键字`-precomposed.png`为后缀。\n\n 参考资料：\n\n*   [Specifying a Webpage Icon for Web Clip](https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html)\n*   [WebApp之 apple-touch-icon](http://blog.sina.com.cn/s/blog_5a073f0f01014jfc.html)\n*   [http://taylor.fausak.me/2013/11/01/ios-7-web-apps/](http://taylor.fausak.me/2013/11/01/ios-7-web-apps/)\n\n### apple-touch-startup-image\n\n同样基于`apple-mobile-web-app-capable`设置为`yes`，可以用WebApp设置一个类似NativeApp的启动画面。\n\n```html\n   <link rel=\"apple-touch-startup-image\" href=\"/startup.png\">\n```\n\n和`apple-touch-icon`不同，`apple-mobile-web-app-capable`不支持sizes属性，所以使用media来控制retina和横竖屏加载不同的启动画面。\n\n```html\n   // iPhone\n   <link href=\"apple-touch-startup-image-320x460.png\" media=\"(device-width: 320px)\" rel=\"apple-touch-startup-image\" />\n   \n   // iPhone Retina\n   <link href=\"apple-touch-startup-image-640x920.png\" media=\"(device-width: 320px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n   \n   // iPhone 5\n   <link rel=\"apple-touch-startup-image\" media=\"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\" href=\"apple-touch-startup-image-640x1096.png\">\n   \n   // iPad portrait\n   <link href=\"apple-touch-startup-image-768x1004.png\" media=\"(device-width: 768px) and (orientation: portrait)\" rel=\"apple-touch-startup-image\" />\n   \n   // iPad landscape\n   <link href=\"apple-touch-startup-image-748x1024.png\" media=\"(device-width: 768px) and (orientation: landscape)\" rel=\"apple-touch-startup-image\" />\n   \n   // iPad Retina portrait\n   <link href=\"apple-touch-startup-image-1536x2008.png\" media=\"(device-width: 1536px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n   \n   // iPad Retina landscape\n   <link href=\"apple-touch-startup-image-1496x2048.png\"media=\"(device-width: 1536px)  and (orientation: landscape) and (-webkit-device-pixel-ratio: 2)\"rel=\"apple-touch-startup-image\" />\n```\n\n参考资料：\n\n*   [Launch Images](https://developer.apple.com/library/safari/documentation/UserExperience/Conceptual/MobileHIG/LaunchImages.html#//apple_ref/doc/uid/TP40006556-CH22-SW1)\n*   [iOS Web App Icons &amp; Startup Images](http://taylor.fausak.me/2012/03/27/ios-web-app-icons-and-startup-images/)\n*   [iPhone 5 Web App Startup Image](http://taylor.fausak.me/2012/09/20/iphone-5-web-app-startup-image/)\n\n### 总结\n\n空白页面模板，然后再根据具体情况在此基础上添加apple-touch-icon和apple-touch-startup-image\n\n```html\n<!DOCTYPE html>\n    <html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no, minimal-ui\" />\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n        <meta name=\"format-detection\"content=\"telephone=no, email=no\" />\n        <title>Document</title>\n    </head>\n    <body>  \n    </body>\n    </html>\n```\n<br>\n转自：[http://www.w3cplus.com/mobile/mobile-terminal-refactoring-create-page.html](http://www.w3cplus.com/mobile/mobile-terminal-refactoring-create-page.html)\n","slug":"web app之meta","published":1,"updated":"2016-01-27T07:12:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijwi82io000hh7kxri09x5n0"},{"title":"web app变革之rem","date":"2015-07-10T03:02:00.000Z","_content":"\n转自腾讯ISUX ([http://isux.tencent.com/web-app-rem.html](http://isux.tencent.com/web-app-rem.html))\n\n\n&nbsp; &nbsp; rem这是个低调的css单位，近一两年开始崭露头角，有许多同学对rem的评价不一，有的在尝试使用，有的在使用过程中遇到坑就弃用了。但是我对rem综合评价是用来做web app它绝对是最合适的人选之一。\n\n<!--more-->\n## rem是什么？\n\n&nbsp;&nbsp;&nbsp;&nbsp;rem（font&nbsp;size&nbsp;of&nbsp;the&nbsp;root&nbsp;element）是指相对于根元素的字体大小的单位。简单的说它就是一个相对单位。看到rem大家一定会想起em单位，em（font&nbsp;size&nbsp;of&nbsp;the&nbsp;element）是指相对于父元素的字体大小的单位。它们之间其实很相似，只不过一个计算的规则是依赖根元素一个是依赖父元素计算。\n\n## 为什么web&nbsp;app要使用rem？\n\n&nbsp; &nbsp; 这里我特别强调web&nbsp;app，web&nbsp;page就不能使用rem吗，其实也当然可以，不过出于兼容性的考虑在web&nbsp;app下使用更加能突显这个单位的价值和能力，接下来我们来看看目前一些企业的web app是怎么做屏幕适配的。\n\n### 1、实现强大的屏幕适配布局：\n\n&nbsp;&nbsp;&nbsp;&nbsp;最近iphone6一下出了两款尺寸的手机，导致的移动端的屏幕种类更加的混乱，记得一两年前做web&nbsp;app有一种做法是以320宽度为标准去做适配，超过320的大小还是以320的规格去展示，这种实现方式以淘宝web&nbsp;app为代表作，但是近期手机淘宝首页进行了改版，采用了rem这个单位，首页以内依旧是和以前一样各种混乱，有定死宽度的页面，也有那种流式布局的页面。\n\n&nbsp;&nbsp;&nbsp;&nbsp;我们现在在切页面布局的使用常用的单位是px，这是一个绝对单位，web&nbsp;app的屏幕适配有很多中做法，例如：流式布局、限死宽度，还有就是通过响应式来做，但是这些方案都不是最佳的解决方法。\n\n&nbsp;&nbsp;&nbsp;&nbsp;例如流式布局的解决方案有不少弊端，它虽然可以让各种屏幕都适配，但是显示的效果极其的不好，因为只有几个尺寸的手机能够完美的显示出视觉设计师和交互最想要的效果，但是目前行业里用流式布局切web&nbsp;app的公司还是挺多的，看看下面我收集的一些案例：\n\n1.亚马逊：\n\n![img](http://520ued.com/uploads/20141218/1418896965.jpeg)\n\n2.携程：\n\n![img](http://520ued.com/uploads/20141218/1418891322.jpeg)\n\n3.兰亭\n\n![img](http://520ued.com/uploads/20141218/1418891825.jpeg)\n\n&nbsp;&nbsp;&nbsp;&nbsp;上面的网站都是采用的流式布局的技术实现的，他们在页面布局的时候都是通过百分比来定义宽度，但是高度大都是用px来固定住，所以在大屏幕的手机下显示效果会变成有些页面元素宽度被拉的很长，但是高度还是和原来一样，实际显示非常的不协调，这就是流式布局的最致命的缺点，往往只有几个尺寸的手机下看到的效果是令人满意的，其实很多视觉设计师应该无法接受这种效果，因为他们的设计图在大屏幕手机下看到的效果相当于是被横向拉长来一样。\n\n&nbsp;&nbsp;&nbsp;&nbsp;流式布局并不是最理想的实现方式，通过大量的百分比布局，会经常出现许多兼容性的问题，还有就是对设计有很多的限制，因为他们在设计之初就需要考虑流式布局对元素造成的影响，只能设计横向拉伸的元素布局，设计的时候存在很多局限性。\n\n### 2.固定宽度做法\n\n&nbsp; &nbsp; 还有一种是固定页面宽度的做法，早期有些网站把页面设置成320的宽度，超出部分留白，这样做视觉，前端都挺开心，视觉在也不用被流式布局限制自己的设计灵感了，前端也不用在搞坑爹的流式布局。但是这种解决方案也是存在一些问题，例如在大屏幕手机下两边是留白的，还有一个就是大屏幕手机下看起来页面会特别小，操作的按钮也很小，手机淘宝首页起初是这么做的，但近期改版了，采用了rem。\n\n### 3.响应式做法\n\n&nbsp;&nbsp;&nbsp;&nbsp;响应式这种方式在国内很少有大型企业的复杂性的网站在移动端用这种方法去做，主要原因是工作大，维护性难，所以一般都是中小型的门户或者博客类站点会采用响应式的方法从web page到web app直接一步到位，因为这样反而可以节约成本，不用再专门为自己的网站做一个web app的版本。\n\n### 4.设置viewport进行缩放\n\n\n天猫的web app的首页就是采用这种方式去做的，以320宽度为基准，进行缩放，最大缩放为320*1.3 = 416，基本缩放到416都就可以兼容iphone6 plus的屏幕了，这个方法简单粗暴，又高效。说实话我觉得他和用接下去我们要讲的rem都非常高效，不过有部分同学使用过程中反应缩放会导致有些页面元素会糊的情况。\n\n``` html\n<meta name=\"viewport\" content=\"width=320,maximum-scale=1.3,user-scalable=no\">\n```\n\n## rem能等比例适配所有屏幕\n\n&nbsp;&nbsp;&nbsp;&nbsp;上面讲了一大堆目前大部分公司主流的一些web app的适配解决方案，接下来讲下rem是如何工作的。\n\n&nbsp;&nbsp;&nbsp;&nbsp;上面说过rem是通过根元素进行适配的，网页中的根元素指的是html我们通过设置html的字体大小就可以控制rem的大小。举个例子：\n\n```css\nhtml{\n    font-size:20px;\n}\n.btn {\n    width: 6rem;\n    height: 3rem;\n    line-height: 3rem;\n    font-size: 1.2rem;\n    display: inline-block;\n    background: #06c;\n    color: #fff;\n    border-radius: .5rem;\n    text-decoration: none;\n    text-align: center;    \n}\n```\n\n[Demo](http://jsfiddle.net/520UED/6te3yyua/1/embedded/result/) 上面代码结果按钮大小如下图：\n\n![img](http://520ued.com/uploads/20141218/1418899506.jpeg)\n\n我把html设置成10px是为了方便我们计算，为什么6rem等于60px。如果这个时候我们的.btn的样式不变，我们再改变html的font-size的值，看看按钮发生上面变化:\n\n```css\nhtml{\n    font-size:40px;\n}\n```\n\n[Demo](http://jsfiddle.net/520UED/6te3yyua/2/embedded/result/)\n\n按钮大小结果如下：\n\n![img](http://520ued.com/uploads/20141218/1418898055.jpeg)\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的width，height变成了上面结果的两倍，我们只改变了html的font-size，但.btn样式的width,height的rem设置的属性不变的情况下就改变了按钮在web中的大小。\n\n其实从上面两个案例中我们就可以计算出1px多少rem:\n\n第一个例子：\n\n120px = 6rem * 20px(根元素设置大值)\n\n第二个例子：\n\n240px = 6rem * 40px(根元素设置大值)\n\n推算出：\n\n10px &nbsp;= 1rem 在根元素（font-size = 10px的时候）；\n\n20px &nbsp;= 1rem 在根元素（font-size = 20px的时候）；\n\n40px &nbsp;= 1rem 在根元素（font-size = 40px的时候）；\n\n&nbsp;&nbsp;&nbsp;&nbsp;在上面两个例子中我们发现第一个案例按钮是等比例放大到第二个按钮，html font-size的改变就会导致按钮的大小发生改变，我们并不需要改变先前给按钮设置的宽度和高度，其实这就是我们最想看到的，为什么这么说？接下来我们再来看一个例子：\n\n[Demo](http://121.40.99.17/global/rem-phone.html)\n\n![img](http://520ued.com/uploads/20141218/1418873132.jpeg)\n\n&nbsp;&nbsp;&nbsp;&nbsp;由上面两个的demo中我们知道改变html的font-size可以等比改变所有用了rem单位的元素，所以大家可以通过chrome浏览器的调试工具去切换第三个的demo在不同设备下的展示效果，或者通过缩放浏览器的宽度来查看效果，我们可以看到不管在任何分辨率下，页面的排版都是按照等比例进行切换，并且布局没有乱。我只是通过一段js根据浏览器当前的分辨率改变font-size的值，就简单的实现了上面的效果，页面的所有元素都不需要进行任何改变。\n\n&nbsp;&nbsp;&nbsp;&nbsp;**到这里肯定有很多人会问我是怎么计算出不同分辨率下font-size的值？**\n\n&nbsp;&nbsp;&nbsp;&nbsp;首先假设我上面的页面设计稿给我时候是按照640的标准尺寸给我的前提下，（当然这个尺寸肯定不一定是640，可以是320，或者480，又或是375）来看一组表格。\n\n![img](http://520ued.com/uploads/20141218/1418903956.jpeg)\n\n&nbsp;&nbsp;&nbsp;&nbsp;上面的表格蓝色一列是Demo3中页面的尺寸，页面是以640的宽度去切的，怎么计算不同宽度下font-site的值，大家看表格上面的数值变化应该能明白。举个例子：384/640 = 0.6，384是640的0.6倍，所以384页面宽度下的font-size也等于它的0.6倍，这时384的font-size就等于12px。在不同设备的宽度计算方式以此类推。\n\n&nbsp; &nbsp; Demo3中我是通过JS去动态计算根元素的font-size，这样的好处是所有设备分辨率都能兼容适配，淘宝首页目前就是用的JS计算。但其实不用JS我们也可以做适配，一般我们在做web app都会先统计自己网站有哪些主流的屏幕设备，然后去针对那些设备去做media query设置也可以实现适配，例如下面这样：\n\n``` Css\n    html {\n        font-size : 20px;\n    }\n    @media only screen and (min-width: 401px){\n        html {\n            font-size: 25px !important;\n        }\n    }\n    @media only screen and (min-width: 428px){\n        html {\n            font-size: 26.75px !important;\n        }\n    }\n    @media only screen and (min-width: 481px){\n        html {\n            font-size: 30px !important; \n        }\n    }\n    @media only screen and (min-width: 569px){\n        html {\n            font-size: 35px !important; \n        }\n    }\n    @media only screen and (min-width: 641px){\n        html {\n            font-size: 40px !important; \n        }\n    }\n``` \n\n&nbsp;&nbsp;&nbsp;&nbsp;上面的做的设置当然是不能所有设备全适配，但是用JS是可以实现全适配。具体用哪个就要根据自己的实际工作场景去定了。\n\n&nbsp;&nbsp;&nbsp;&nbsp;下面推荐两个国内用了rem技术的移动站，大家可以上去参考看看他们的做法，手机淘宝目前只有首页用了rem，淘宝native app的首页是内嵌的web app首页。\n\n**淘宝首页**：[m.taobao.com](http://m.taobao.com/)\n\n**D X**：[m.dx.com](http://m.dx.com/)\n\n### 最后我们再来看一看他的兼容性：\n\n[![web app变革之rem](http://520ued.com/uploads/20141218/1418894538.png)](http://520ued.com/uploads/20141218/1418894538.png \"rem兼容性测试报告\")\n","source":"_posts/rem.md","raw":"title: web app变革之rem\ndate: 2015-7-10 11:02\ntags:\n- webapp\ncategories: 学习笔记\n---\n\n转自腾讯ISUX ([http://isux.tencent.com/web-app-rem.html](http://isux.tencent.com/web-app-rem.html))\n\n\n&nbsp; &nbsp; rem这是个低调的css单位，近一两年开始崭露头角，有许多同学对rem的评价不一，有的在尝试使用，有的在使用过程中遇到坑就弃用了。但是我对rem综合评价是用来做web app它绝对是最合适的人选之一。\n\n<!--more-->\n## rem是什么？\n\n&nbsp;&nbsp;&nbsp;&nbsp;rem（font&nbsp;size&nbsp;of&nbsp;the&nbsp;root&nbsp;element）是指相对于根元素的字体大小的单位。简单的说它就是一个相对单位。看到rem大家一定会想起em单位，em（font&nbsp;size&nbsp;of&nbsp;the&nbsp;element）是指相对于父元素的字体大小的单位。它们之间其实很相似，只不过一个计算的规则是依赖根元素一个是依赖父元素计算。\n\n## 为什么web&nbsp;app要使用rem？\n\n&nbsp; &nbsp; 这里我特别强调web&nbsp;app，web&nbsp;page就不能使用rem吗，其实也当然可以，不过出于兼容性的考虑在web&nbsp;app下使用更加能突显这个单位的价值和能力，接下来我们来看看目前一些企业的web app是怎么做屏幕适配的。\n\n### 1、实现强大的屏幕适配布局：\n\n&nbsp;&nbsp;&nbsp;&nbsp;最近iphone6一下出了两款尺寸的手机，导致的移动端的屏幕种类更加的混乱，记得一两年前做web&nbsp;app有一种做法是以320宽度为标准去做适配，超过320的大小还是以320的规格去展示，这种实现方式以淘宝web&nbsp;app为代表作，但是近期手机淘宝首页进行了改版，采用了rem这个单位，首页以内依旧是和以前一样各种混乱，有定死宽度的页面，也有那种流式布局的页面。\n\n&nbsp;&nbsp;&nbsp;&nbsp;我们现在在切页面布局的使用常用的单位是px，这是一个绝对单位，web&nbsp;app的屏幕适配有很多中做法，例如：流式布局、限死宽度，还有就是通过响应式来做，但是这些方案都不是最佳的解决方法。\n\n&nbsp;&nbsp;&nbsp;&nbsp;例如流式布局的解决方案有不少弊端，它虽然可以让各种屏幕都适配，但是显示的效果极其的不好，因为只有几个尺寸的手机能够完美的显示出视觉设计师和交互最想要的效果，但是目前行业里用流式布局切web&nbsp;app的公司还是挺多的，看看下面我收集的一些案例：\n\n1.亚马逊：\n\n![img](http://520ued.com/uploads/20141218/1418896965.jpeg)\n\n2.携程：\n\n![img](http://520ued.com/uploads/20141218/1418891322.jpeg)\n\n3.兰亭\n\n![img](http://520ued.com/uploads/20141218/1418891825.jpeg)\n\n&nbsp;&nbsp;&nbsp;&nbsp;上面的网站都是采用的流式布局的技术实现的，他们在页面布局的时候都是通过百分比来定义宽度，但是高度大都是用px来固定住，所以在大屏幕的手机下显示效果会变成有些页面元素宽度被拉的很长，但是高度还是和原来一样，实际显示非常的不协调，这就是流式布局的最致命的缺点，往往只有几个尺寸的手机下看到的效果是令人满意的，其实很多视觉设计师应该无法接受这种效果，因为他们的设计图在大屏幕手机下看到的效果相当于是被横向拉长来一样。\n\n&nbsp;&nbsp;&nbsp;&nbsp;流式布局并不是最理想的实现方式，通过大量的百分比布局，会经常出现许多兼容性的问题，还有就是对设计有很多的限制，因为他们在设计之初就需要考虑流式布局对元素造成的影响，只能设计横向拉伸的元素布局，设计的时候存在很多局限性。\n\n### 2.固定宽度做法\n\n&nbsp; &nbsp; 还有一种是固定页面宽度的做法，早期有些网站把页面设置成320的宽度，超出部分留白，这样做视觉，前端都挺开心，视觉在也不用被流式布局限制自己的设计灵感了，前端也不用在搞坑爹的流式布局。但是这种解决方案也是存在一些问题，例如在大屏幕手机下两边是留白的，还有一个就是大屏幕手机下看起来页面会特别小，操作的按钮也很小，手机淘宝首页起初是这么做的，但近期改版了，采用了rem。\n\n### 3.响应式做法\n\n&nbsp;&nbsp;&nbsp;&nbsp;响应式这种方式在国内很少有大型企业的复杂性的网站在移动端用这种方法去做，主要原因是工作大，维护性难，所以一般都是中小型的门户或者博客类站点会采用响应式的方法从web page到web app直接一步到位，因为这样反而可以节约成本，不用再专门为自己的网站做一个web app的版本。\n\n### 4.设置viewport进行缩放\n\n\n天猫的web app的首页就是采用这种方式去做的，以320宽度为基准，进行缩放，最大缩放为320*1.3 = 416，基本缩放到416都就可以兼容iphone6 plus的屏幕了，这个方法简单粗暴，又高效。说实话我觉得他和用接下去我们要讲的rem都非常高效，不过有部分同学使用过程中反应缩放会导致有些页面元素会糊的情况。\n\n``` html\n<meta name=\"viewport\" content=\"width=320,maximum-scale=1.3,user-scalable=no\">\n```\n\n## rem能等比例适配所有屏幕\n\n&nbsp;&nbsp;&nbsp;&nbsp;上面讲了一大堆目前大部分公司主流的一些web app的适配解决方案，接下来讲下rem是如何工作的。\n\n&nbsp;&nbsp;&nbsp;&nbsp;上面说过rem是通过根元素进行适配的，网页中的根元素指的是html我们通过设置html的字体大小就可以控制rem的大小。举个例子：\n\n```css\nhtml{\n    font-size:20px;\n}\n.btn {\n    width: 6rem;\n    height: 3rem;\n    line-height: 3rem;\n    font-size: 1.2rem;\n    display: inline-block;\n    background: #06c;\n    color: #fff;\n    border-radius: .5rem;\n    text-decoration: none;\n    text-align: center;    \n}\n```\n\n[Demo](http://jsfiddle.net/520UED/6te3yyua/1/embedded/result/) 上面代码结果按钮大小如下图：\n\n![img](http://520ued.com/uploads/20141218/1418899506.jpeg)\n\n我把html设置成10px是为了方便我们计算，为什么6rem等于60px。如果这个时候我们的.btn的样式不变，我们再改变html的font-size的值，看看按钮发生上面变化:\n\n```css\nhtml{\n    font-size:40px;\n}\n```\n\n[Demo](http://jsfiddle.net/520UED/6te3yyua/2/embedded/result/)\n\n按钮大小结果如下：\n\n![img](http://520ued.com/uploads/20141218/1418898055.jpeg)\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的width，height变成了上面结果的两倍，我们只改变了html的font-size，但.btn样式的width,height的rem设置的属性不变的情况下就改变了按钮在web中的大小。\n\n其实从上面两个案例中我们就可以计算出1px多少rem:\n\n第一个例子：\n\n120px = 6rem * 20px(根元素设置大值)\n\n第二个例子：\n\n240px = 6rem * 40px(根元素设置大值)\n\n推算出：\n\n10px &nbsp;= 1rem 在根元素（font-size = 10px的时候）；\n\n20px &nbsp;= 1rem 在根元素（font-size = 20px的时候）；\n\n40px &nbsp;= 1rem 在根元素（font-size = 40px的时候）；\n\n&nbsp;&nbsp;&nbsp;&nbsp;在上面两个例子中我们发现第一个案例按钮是等比例放大到第二个按钮，html font-size的改变就会导致按钮的大小发生改变，我们并不需要改变先前给按钮设置的宽度和高度，其实这就是我们最想看到的，为什么这么说？接下来我们再来看一个例子：\n\n[Demo](http://121.40.99.17/global/rem-phone.html)\n\n![img](http://520ued.com/uploads/20141218/1418873132.jpeg)\n\n&nbsp;&nbsp;&nbsp;&nbsp;由上面两个的demo中我们知道改变html的font-size可以等比改变所有用了rem单位的元素，所以大家可以通过chrome浏览器的调试工具去切换第三个的demo在不同设备下的展示效果，或者通过缩放浏览器的宽度来查看效果，我们可以看到不管在任何分辨率下，页面的排版都是按照等比例进行切换，并且布局没有乱。我只是通过一段js根据浏览器当前的分辨率改变font-size的值，就简单的实现了上面的效果，页面的所有元素都不需要进行任何改变。\n\n&nbsp;&nbsp;&nbsp;&nbsp;**到这里肯定有很多人会问我是怎么计算出不同分辨率下font-size的值？**\n\n&nbsp;&nbsp;&nbsp;&nbsp;首先假设我上面的页面设计稿给我时候是按照640的标准尺寸给我的前提下，（当然这个尺寸肯定不一定是640，可以是320，或者480，又或是375）来看一组表格。\n\n![img](http://520ued.com/uploads/20141218/1418903956.jpeg)\n\n&nbsp;&nbsp;&nbsp;&nbsp;上面的表格蓝色一列是Demo3中页面的尺寸，页面是以640的宽度去切的，怎么计算不同宽度下font-site的值，大家看表格上面的数值变化应该能明白。举个例子：384/640 = 0.6，384是640的0.6倍，所以384页面宽度下的font-size也等于它的0.6倍，这时384的font-size就等于12px。在不同设备的宽度计算方式以此类推。\n\n&nbsp; &nbsp; Demo3中我是通过JS去动态计算根元素的font-size，这样的好处是所有设备分辨率都能兼容适配，淘宝首页目前就是用的JS计算。但其实不用JS我们也可以做适配，一般我们在做web app都会先统计自己网站有哪些主流的屏幕设备，然后去针对那些设备去做media query设置也可以实现适配，例如下面这样：\n\n``` Css\n    html {\n        font-size : 20px;\n    }\n    @media only screen and (min-width: 401px){\n        html {\n            font-size: 25px !important;\n        }\n    }\n    @media only screen and (min-width: 428px){\n        html {\n            font-size: 26.75px !important;\n        }\n    }\n    @media only screen and (min-width: 481px){\n        html {\n            font-size: 30px !important; \n        }\n    }\n    @media only screen and (min-width: 569px){\n        html {\n            font-size: 35px !important; \n        }\n    }\n    @media only screen and (min-width: 641px){\n        html {\n            font-size: 40px !important; \n        }\n    }\n``` \n\n&nbsp;&nbsp;&nbsp;&nbsp;上面的做的设置当然是不能所有设备全适配，但是用JS是可以实现全适配。具体用哪个就要根据自己的实际工作场景去定了。\n\n&nbsp;&nbsp;&nbsp;&nbsp;下面推荐两个国内用了rem技术的移动站，大家可以上去参考看看他们的做法，手机淘宝目前只有首页用了rem，淘宝native app的首页是内嵌的web app首页。\n\n**淘宝首页**：[m.taobao.com](http://m.taobao.com/)\n\n**D X**：[m.dx.com](http://m.dx.com/)\n\n### 最后我们再来看一看他的兼容性：\n\n[![web app变革之rem](http://520ued.com/uploads/20141218/1418894538.png)](http://520ued.com/uploads/20141218/1418894538.png \"rem兼容性测试报告\")\n","slug":"rem","published":1,"updated":"2016-01-27T07:12:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijwi82iu000lh7kxa2h2rrop"},{"title":"js闭包使用场景","date":"2016-01-26T16:00:00.000Z","_content":"\n我们来看看闭包的用途。事实上，通过使用闭包，我们可以做很多事情。比如模拟面向对象的代码风格；更优雅，更简洁的表达出代码；在某些方面提升代码的执行效率。\n<!--more-->\n##1 匿名自执行函数\n\n我们知道所有的变量，如果不加上var关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局对象有很多坏处，\n比如：别的函数可能误用这些变量；造成全局对象过于庞大，影响访问速度(因为变量的取值是需要从原型链上遍历的)。\n除了每次使用变量都是用var关键字外，我们在实际情况下经常遇到这样一种情况，即有的函数只需要执行一次，其内部变量无需维护，\n比如UI的初始化，那么我们可以使用闭包：\n\n```javascript \nvar datamodel = {  \n    table : [],  \n    tree : {}  \n};  \n(function(dm){  \n    for(var i = 0; i < dm.table.rows; i++){  \n       var row = dm.table.rows[i];  \n       for(var j = 0; j < row.cells; i++){  \n           drawCell(i, j);  \n       }  \n    }  \n    //build dm.tree\n})(datamodel); \n```\n\n我们创建了一个匿名的函数，并立即执行它，由于外部无法引用它内部的变量，\n因此在执行完后很快就会被释放，关键是这种机制不会污染全局对象。\n\n##2缓存\n\n再来看一个例子，设想我们有一个处理过程很耗时的函数对象，每次调用都会花费很长时间，\n那么我们就需要将计算出来的值存储起来，当调用这个函数的时候，首先在缓存中查找，如果找不到，则进行计算，\n然后更新缓存并返回值，如果找到了，直接返回查找到的值即可。闭包正是可以做到这一点，因为它不会释放外部的引用，\n从而函数内部的值可以得以保留。\n\n```javascript\nvar CachedSearchBox = (function(){  \n    var cache = {},  \n       count = [];  \n    return {  \n       attachSearchBox : function(dsid){  \n           if(dsid in cache){//如果结果在缓存中  \n              return cache[dsid];//直接返回缓存中的对象  \n           }  \n           var fsb = new uikit.webctrl.SearchBox(dsid);//新建  \n           cache[dsid] = fsb;//更新缓存  \n           if(count.length > 100){//保正缓存的大小<=100  \n              delete cache[count.shift()];  \n           }  \n           return fsb;        \n       },  \n       clearSearchBox : function(dsid){  \n           if(dsid in cache){  \n              cache[dsid].clearSelection();    \n           }  \n       }  \n    };  \n})();  \nCachedSearchBox.attachSearchBox(\"input1\");  \n```\n\n这样，当我们第二次调用CachedSearchBox.attachSerachBox(“input1”)的时候，\n我们就可以从缓存中取道该对象，而不用再去创建一个新的searchbox对象。\n\n##3 实现封装\n\n可以先来看一个关于封装的例子，在person之外的地方无法访问其内部的变量，而通过提供闭包的形式来访问：\n\n```javascript\nvar person = function(){  \n    //变量作用域为函数内部，外部无法访问  \n    var name = \"default\";      \n    return {  \n       getName : function(){  \n           return name;  \n       },  \n       setName : function(newName){  \n           name = newName;  \n       }  \n    }  \n}();  \nprint(person.name);//直接访问，结果为undefined  \nprint(person.getName());  \nperson.setName(\"abruzzi\");  \nprint(person.getName());  \n-\n得到结果如下：\nundefined\ndefault\nabruzzi\n```\n\n##4 闭包的另一个重要用途是实现面向对象中的对象，传统的对象语言都提供类的模板机制，这样不同的对象(类的实例)拥有独立的成员及状态，互不干涉。虽然JavaScript中没有类这样的机制，但是通过使用闭包，\n我们可以模拟出这样的机制。还是以上边的例子来讲：\n\n```javascript\nfunction Person(){  \n    var name = \"default\";      \n    return {  \n       getName : function(){  \n           return name;  \n       },  \n       setName : function(newName){  \n           name = newName;  \n       }  \n    }  \n};    \nvar john = Person();  \nprint(john.getName());  \njohn.setName(\"john\");  \nprint(john.getName());  \n- \nvar jack = Person();  \nprint(jack.getName());  \njack.setName(\"jack\");  \nprint(jack.getName());  \n-\n运行结果如下：\n-\ndefault\njohn\ndefault\njack\n```\n","source":"_posts/js闭包使用场景.md","raw":"title: js闭包使用场景\ndate: 2016-1-27\ntags:\n- js\ncategories: 学习笔记\n---\n\n我们来看看闭包的用途。事实上，通过使用闭包，我们可以做很多事情。比如模拟面向对象的代码风格；更优雅，更简洁的表达出代码；在某些方面提升代码的执行效率。\n<!--more-->\n##1 匿名自执行函数\n\n我们知道所有的变量，如果不加上var关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局对象有很多坏处，\n比如：别的函数可能误用这些变量；造成全局对象过于庞大，影响访问速度(因为变量的取值是需要从原型链上遍历的)。\n除了每次使用变量都是用var关键字外，我们在实际情况下经常遇到这样一种情况，即有的函数只需要执行一次，其内部变量无需维护，\n比如UI的初始化，那么我们可以使用闭包：\n\n```javascript \nvar datamodel = {  \n    table : [],  \n    tree : {}  \n};  \n(function(dm){  \n    for(var i = 0; i < dm.table.rows; i++){  \n       var row = dm.table.rows[i];  \n       for(var j = 0; j < row.cells; i++){  \n           drawCell(i, j);  \n       }  \n    }  \n    //build dm.tree\n})(datamodel); \n```\n\n我们创建了一个匿名的函数，并立即执行它，由于外部无法引用它内部的变量，\n因此在执行完后很快就会被释放，关键是这种机制不会污染全局对象。\n\n##2缓存\n\n再来看一个例子，设想我们有一个处理过程很耗时的函数对象，每次调用都会花费很长时间，\n那么我们就需要将计算出来的值存储起来，当调用这个函数的时候，首先在缓存中查找，如果找不到，则进行计算，\n然后更新缓存并返回值，如果找到了，直接返回查找到的值即可。闭包正是可以做到这一点，因为它不会释放外部的引用，\n从而函数内部的值可以得以保留。\n\n```javascript\nvar CachedSearchBox = (function(){  \n    var cache = {},  \n       count = [];  \n    return {  \n       attachSearchBox : function(dsid){  \n           if(dsid in cache){//如果结果在缓存中  \n              return cache[dsid];//直接返回缓存中的对象  \n           }  \n           var fsb = new uikit.webctrl.SearchBox(dsid);//新建  \n           cache[dsid] = fsb;//更新缓存  \n           if(count.length > 100){//保正缓存的大小<=100  \n              delete cache[count.shift()];  \n           }  \n           return fsb;        \n       },  \n       clearSearchBox : function(dsid){  \n           if(dsid in cache){  \n              cache[dsid].clearSelection();    \n           }  \n       }  \n    };  \n})();  \nCachedSearchBox.attachSearchBox(\"input1\");  \n```\n\n这样，当我们第二次调用CachedSearchBox.attachSerachBox(“input1”)的时候，\n我们就可以从缓存中取道该对象，而不用再去创建一个新的searchbox对象。\n\n##3 实现封装\n\n可以先来看一个关于封装的例子，在person之外的地方无法访问其内部的变量，而通过提供闭包的形式来访问：\n\n```javascript\nvar person = function(){  \n    //变量作用域为函数内部，外部无法访问  \n    var name = \"default\";      \n    return {  \n       getName : function(){  \n           return name;  \n       },  \n       setName : function(newName){  \n           name = newName;  \n       }  \n    }  \n}();  \nprint(person.name);//直接访问，结果为undefined  \nprint(person.getName());  \nperson.setName(\"abruzzi\");  \nprint(person.getName());  \n-\n得到结果如下：\nundefined\ndefault\nabruzzi\n```\n\n##4 闭包的另一个重要用途是实现面向对象中的对象，传统的对象语言都提供类的模板机制，这样不同的对象(类的实例)拥有独立的成员及状态，互不干涉。虽然JavaScript中没有类这样的机制，但是通过使用闭包，\n我们可以模拟出这样的机制。还是以上边的例子来讲：\n\n```javascript\nfunction Person(){  \n    var name = \"default\";      \n    return {  \n       getName : function(){  \n           return name;  \n       },  \n       setName : function(newName){  \n           name = newName;  \n       }  \n    }  \n};    \nvar john = Person();  \nprint(john.getName());  \njohn.setName(\"john\");  \nprint(john.getName());  \n- \nvar jack = Person();  \nprint(jack.getName());  \njack.setName(\"jack\");  \nprint(jack.getName());  \n-\n运行结果如下：\n-\ndefault\njohn\ndefault\njack\n```\n","slug":"js闭包使用场景","published":1,"updated":"2016-01-27T07:25:38.000Z","_id":"cijwi82iw000oh7kxupt2z3rw","comments":1,"layout":"post","photos":[],"link":""},{"title":"Hexo发布命令--Generating","date":"2015-07-05T14:44:00.000Z","_content":"\n- [Hexo全部命令]  \n[Hexo全部命令]: https://github.com/hexojs/site/tree/master/source/docs\n- [本文源] \n[本文源]: https://github.com/hexojs/site/blob/master/source/docs/generating.md\ntitle: Generating\n---\nGenerate static files with Hexo is quite easy and fast.\n\n``` bash\n$ hexo generate\n```\n<!--more-->\n### Watch for File Changes\n\nHexo can watch for file changes and regenerate files immediately. Hexo will compare SHA1 checksum of files and only write if files changed.\n\n``` bash\n$ hexo generate --watch\n```\n\n### Deploy After Generating\n\nTo deploy after generating, you can run one of the following commands. Both of them are equaled.\n\n``` bash\n$ hexo generate --deploy\n$ hexo deploy --generate\n```\n\n常用命令：\n\n``` bash\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #将.deploy目录部署到GitHub\n```\n\n常用复合命令：\n\n``` bash\nhexo deploy -g\nhexo server -g\n```\n\n简写：\n``` bash\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```","source":"_posts/hexo发布命令.md","raw":"title: Hexo发布命令--Generating\ndate: 2015-7-5 22:44\ntags:\n- Hexo\ncategories: 学习笔记\n---\n\n- [Hexo全部命令]  \n[Hexo全部命令]: https://github.com/hexojs/site/tree/master/source/docs\n- [本文源] \n[本文源]: https://github.com/hexojs/site/blob/master/source/docs/generating.md\ntitle: Generating\n---\nGenerate static files with Hexo is quite easy and fast.\n\n``` bash\n$ hexo generate\n```\n<!--more-->\n### Watch for File Changes\n\nHexo can watch for file changes and regenerate files immediately. Hexo will compare SHA1 checksum of files and only write if files changed.\n\n``` bash\n$ hexo generate --watch\n```\n\n### Deploy After Generating\n\nTo deploy after generating, you can run one of the following commands. Both of them are equaled.\n\n``` bash\n$ hexo generate --deploy\n$ hexo deploy --generate\n```\n\n常用命令：\n\n``` bash\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #将.deploy目录部署到GitHub\n```\n\n常用复合命令：\n\n``` bash\nhexo deploy -g\nhexo server -g\n```\n\n简写：\n``` bash\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```","slug":"hexo发布命令","published":1,"updated":"2016-01-27T07:12:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijwi82iy000sh7kxcqd0qfzh"},{"title":"Hello World","date":"2014-12-02T07:58:00.000Z","_content":"在学NodeJs无意中发现Hexo这个基于Node.js静态博客框架，发现它配置安装都非常简单，而且还有\n不同的主题样式，非常有趣，以后就在这里写写Blog，记录一下学习过程。\n\n* 阅读\n* 记录 \n* 思考  \n* 总结\n* 分享\n","source":"_posts/hello-world.md","raw":"title: Hello World\ndate: 2014-12-2 15:58\ntags:\n- hello world\ncategories: 日志\n---\n在学NodeJs无意中发现Hexo这个基于Node.js静态博客框架，发现它配置安装都非常简单，而且还有\n不同的主题样式，非常有趣，以后就在这里写写Blog，记录一下学习过程。\n\n* 阅读\n* 记录 \n* 思考  \n* 总结\n* 分享\n","slug":"hello-world","published":1,"updated":"2016-01-27T07:12:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijwi82j1000vh7kxuj1s204x"},{"title":"git - 简明指南","date":"2015-07-05T14:44:00.000Z","_content":"\n转自([http://rogerdudler.github.io/git-guide/index.zh.html](http://rogerdudler.github.io/git-guide/index.zh.html))\n\n## 创建新仓库\n\n创建新文件夹，打开，然后执行 \n\n```bash\ngit init\n```\n<!--more-->\n\n以创建新的 git 仓库。\n\n## 检出仓库\n\n执行如下命令以创建一个本地仓库的克隆版本：\n\n```bash\ngit clone /path/to/repository\n```\n\n如果是远端服务器上的仓库，你的命令会是这个样子：\n\n\n```bash\ngit clone username@host:/path/to/repository\n```\n\n\n## 工作流\n\n你的本地仓库由 git 维护的三棵“树”组成。第一个是你的 `工作目录`，它持有实际文件；第二个是 `暂存区（Index）`，它像个缓存区域，临时保存你的改动；最后是 `HEAD`，它指向你最后一次提交的结果。\n\n![img](http://rogerdudler.github.io/git-guide/img/trees.png)\n\n## 添加和提交\n\n你可以提出更改（把它们添加到暂存区），使用如下命令：\n\n```bash\ngit add  <filename>\n```\n\n```bash\ngit add *\n```\n\n这是 git 基本工作流程的第一步；使用如下命令以实际提交改动：\n\n```bash\ngit commit -m \"代码提交信息\"\n```\n\n现在，你的改动已经提交到了 **HEAD**，但是还没到你的远端仓库。\n\n\n## 推送改动\n\n你的改动现在已经在本地仓库的 **HEAD** 中了。执行如下命令以将这些改动提交到远端仓库：\n\n```bash \ngit push origin master\n```\n\n可以把 _master_ 换成你想要推送的任何分支。\n\n如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：\n\n```bash \ngit remote add origin <server>\n```\n\n如此你就能够将你的改动推送到所添加的服务器上去了。\n\n\n## 分支\n\n分支是用来将特性开发绝缘开来的。在你创建仓库的时候，_master_ 是“默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。\n\n![img](http://rogerdudler.github.io/git-guide/img/branches.png)\n\n创建一个叫做“feature_x”的分支，并切换过去：\n\n```bash\ngit checkout -b feature_x\n```\n\n切换回主分支：\n\n```bash\ngit checkout master\n```\n\n再把新建的分支删掉：\n\n```bash\ngit branch -d feature_x\n```\n\n除非你将分支推送到远端仓库，不然该分支就是 _不为他人所见的_：\n\n```bash\ngit push origin <branch>\n```\n\n## 更新与合并\n\n要更新你的本地仓库至最新改动，执行：\n\n```bash\ngit pull\n```\n\n以在你的工作目录中 _获取（fetch）_ 并 _合并（merge）_ 远端的改动。\n\n要合并其他分支到你的当前分支（例如 master），执行：\n\n```bash\ngit merge <branch>\n```\n\n在这两种情况下，git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现_冲突（conflicts）_。\n            这时候就需要你修改这些文件来手动合并这些_冲突（conflicts）_。改完之后，你需要执行如下命令以将它们标记为合并成功：\n\n```bash\ngit add <filename>\n```\n\n在合并改动之前，你可以使用如下命令预览差异：\n\n```bash\ngit diff <source_branch> <target_branch>\n```\n\n\n## 标签\n\n为软件发布创建标签是推荐的。这个概念早已存在，在 SVN 中也有。你可以执行如下命令创建一个叫做 _1.0.0_ 的标签：\n\n```bash\ngit tag 1.0.0 1b2e1d63ff\n```\n\n_1b2e1d63ff_ 是你想要标记的提交 ID 的前 10 位字符。可以使用下列命令获取提交 ID：\n\n```bash\ngit log\n```\n\n你也可以使用少一点的提交 ID 前几位，只要它的指向具有唯一性。\n\n\n## 替换本地改动\n\n假如你操作失误（当然，这最好永远不要发生），你可以使用如下命令替换掉本地改动：\n\n```bash\ngit checkout -- <filename>\n```\n\n此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到暂存区的改动以及新文件都不会受到影响。\n\n假如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：\n\n```bash\ngit fetch origin\n```\n\n```bash\ngit reset --hard origin/master\n```\n\n\n## 实用小贴士\n\n内建的图形化 git：\n\n```bash\ngitk\n```\n\n彩色的 git 输出：\n\n```bash\ngit config color.ui true\n```\n\n显示历史记录时，每个提交的信息只显示一行：\n\n```bash\ngit config format.pretty oneline\n```\n\n交互式添加文件到暂存区：\n\n```bash\ngit add -i\n```\n\n\n## 链接与资源\n\n### 安装包\n\n*   [下载 git OSX 版](http://code.google.com/p/git-osx-installer/downloads/list?can=3)\n*   [下载 git Windows 版](http://msysgit.github.io/)\n*   [下载 git Linux 版](http://book.git-scm.com/2_installing_git.html)\n\n### 图形化客户端\n\n*   [GitX (L) (OSX, 开源软件)](http://gitx.laullon.com/)\n*   [Tower (OSX)](http://www.git-tower.com/)\n*   [Source Tree (OSX, 免费)](http://www.sourcetreeapp.com/)\n*   [GitHub for Mac (OSX, 免费)](http://mac.github.com/)\n*   [GitBox (OSX, App Store)](https://itunes.apple.com/gb/app/gitbox/id403388357?mt=12)\n\n### 指南和手册\n\n*   [Git 社区参考书](http://book.git-scm.com/)\n*   [专业 Git](http://progit.org/book/)\n*   [像 git 那样思考](http://think-like-a-git.net/)\n*   [GitHub 帮助](http://help.github.com/)\n*   [图解 Git](http://marklodato.github.io/visual-git-guide/index-zh-cn.html)\n","source":"_posts/git - 简明指南.md","raw":"title: git - 简明指南\ndate: 2015-7-5 22:44\ntags:\n- git\ncategories: 学习笔记\n---\n\n转自([http://rogerdudler.github.io/git-guide/index.zh.html](http://rogerdudler.github.io/git-guide/index.zh.html))\n\n## 创建新仓库\n\n创建新文件夹，打开，然后执行 \n\n```bash\ngit init\n```\n<!--more-->\n\n以创建新的 git 仓库。\n\n## 检出仓库\n\n执行如下命令以创建一个本地仓库的克隆版本：\n\n```bash\ngit clone /path/to/repository\n```\n\n如果是远端服务器上的仓库，你的命令会是这个样子：\n\n\n```bash\ngit clone username@host:/path/to/repository\n```\n\n\n## 工作流\n\n你的本地仓库由 git 维护的三棵“树”组成。第一个是你的 `工作目录`，它持有实际文件；第二个是 `暂存区（Index）`，它像个缓存区域，临时保存你的改动；最后是 `HEAD`，它指向你最后一次提交的结果。\n\n![img](http://rogerdudler.github.io/git-guide/img/trees.png)\n\n## 添加和提交\n\n你可以提出更改（把它们添加到暂存区），使用如下命令：\n\n```bash\ngit add  <filename>\n```\n\n```bash\ngit add *\n```\n\n这是 git 基本工作流程的第一步；使用如下命令以实际提交改动：\n\n```bash\ngit commit -m \"代码提交信息\"\n```\n\n现在，你的改动已经提交到了 **HEAD**，但是还没到你的远端仓库。\n\n\n## 推送改动\n\n你的改动现在已经在本地仓库的 **HEAD** 中了。执行如下命令以将这些改动提交到远端仓库：\n\n```bash \ngit push origin master\n```\n\n可以把 _master_ 换成你想要推送的任何分支。\n\n如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：\n\n```bash \ngit remote add origin <server>\n```\n\n如此你就能够将你的改动推送到所添加的服务器上去了。\n\n\n## 分支\n\n分支是用来将特性开发绝缘开来的。在你创建仓库的时候，_master_ 是“默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。\n\n![img](http://rogerdudler.github.io/git-guide/img/branches.png)\n\n创建一个叫做“feature_x”的分支，并切换过去：\n\n```bash\ngit checkout -b feature_x\n```\n\n切换回主分支：\n\n```bash\ngit checkout master\n```\n\n再把新建的分支删掉：\n\n```bash\ngit branch -d feature_x\n```\n\n除非你将分支推送到远端仓库，不然该分支就是 _不为他人所见的_：\n\n```bash\ngit push origin <branch>\n```\n\n## 更新与合并\n\n要更新你的本地仓库至最新改动，执行：\n\n```bash\ngit pull\n```\n\n以在你的工作目录中 _获取（fetch）_ 并 _合并（merge）_ 远端的改动。\n\n要合并其他分支到你的当前分支（例如 master），执行：\n\n```bash\ngit merge <branch>\n```\n\n在这两种情况下，git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现_冲突（conflicts）_。\n            这时候就需要你修改这些文件来手动合并这些_冲突（conflicts）_。改完之后，你需要执行如下命令以将它们标记为合并成功：\n\n```bash\ngit add <filename>\n```\n\n在合并改动之前，你可以使用如下命令预览差异：\n\n```bash\ngit diff <source_branch> <target_branch>\n```\n\n\n## 标签\n\n为软件发布创建标签是推荐的。这个概念早已存在，在 SVN 中也有。你可以执行如下命令创建一个叫做 _1.0.0_ 的标签：\n\n```bash\ngit tag 1.0.0 1b2e1d63ff\n```\n\n_1b2e1d63ff_ 是你想要标记的提交 ID 的前 10 位字符。可以使用下列命令获取提交 ID：\n\n```bash\ngit log\n```\n\n你也可以使用少一点的提交 ID 前几位，只要它的指向具有唯一性。\n\n\n## 替换本地改动\n\n假如你操作失误（当然，这最好永远不要发生），你可以使用如下命令替换掉本地改动：\n\n```bash\ngit checkout -- <filename>\n```\n\n此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到暂存区的改动以及新文件都不会受到影响。\n\n假如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：\n\n```bash\ngit fetch origin\n```\n\n```bash\ngit reset --hard origin/master\n```\n\n\n## 实用小贴士\n\n内建的图形化 git：\n\n```bash\ngitk\n```\n\n彩色的 git 输出：\n\n```bash\ngit config color.ui true\n```\n\n显示历史记录时，每个提交的信息只显示一行：\n\n```bash\ngit config format.pretty oneline\n```\n\n交互式添加文件到暂存区：\n\n```bash\ngit add -i\n```\n\n\n## 链接与资源\n\n### 安装包\n\n*   [下载 git OSX 版](http://code.google.com/p/git-osx-installer/downloads/list?can=3)\n*   [下载 git Windows 版](http://msysgit.github.io/)\n*   [下载 git Linux 版](http://book.git-scm.com/2_installing_git.html)\n\n### 图形化客户端\n\n*   [GitX (L) (OSX, 开源软件)](http://gitx.laullon.com/)\n*   [Tower (OSX)](http://www.git-tower.com/)\n*   [Source Tree (OSX, 免费)](http://www.sourcetreeapp.com/)\n*   [GitHub for Mac (OSX, 免费)](http://mac.github.com/)\n*   [GitBox (OSX, App Store)](https://itunes.apple.com/gb/app/gitbox/id403388357?mt=12)\n\n### 指南和手册\n\n*   [Git 社区参考书](http://book.git-scm.com/)\n*   [专业 Git](http://progit.org/book/)\n*   [像 git 那样思考](http://think-like-a-git.net/)\n*   [GitHub 帮助](http://help.github.com/)\n*   [图解 Git](http://marklodato.github.io/visual-git-guide/index-zh-cn.html)\n","slug":"git - 简明指南","published":1,"updated":"2016-01-27T07:12:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijwi82j4000zh7kx8t5zfos6"},{"title":"css3的background属性","date":"2015-08-05T13:50:00.000Z","_content":"css3的background属性\n\n用图片作为背景平铺，以封面形式展示\n\n```css\n.main-wrapper{\n  background:#444 url(../img/bg.jpg);\n  background-attachment:fixed;\n  background-repeat:no-repeat;\n  background-size:cover;\n  background-position:center center;\n}\n```\n\n\n\n","source":"_posts/css3-background.md","raw":"title: css3的background属性\ndate: 2015-08-5 21:50\ntags:\n- css3\ncategories: 学习笔记\n---\ncss3的background属性\n\n用图片作为背景平铺，以封面形式展示\n\n```css\n.main-wrapper{\n  background:#444 url(../img/bg.jpg);\n  background-attachment:fixed;\n  background-repeat:no-repeat;\n  background-size:cover;\n  background-position:center center;\n}\n```\n\n\n\n","slug":"css3-background","published":1,"updated":"2016-01-27T07:12:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijwi82j70012h7kxe0v9x4dx"},{"title":"PagesSlide","date":"2015-08-07T01:23:00.000Z","_content":"### PageSlide介绍\n\n用纯CSS3实现页面切换滑动效果，底部切换使用的radio实现选中效果,图标采用的font-face,切换页面\n后标题和简介有上下淡出和左右淡出两种效果。\n<!--more-->\n### 源码地址：\n[点击这里](https://github.com/huahua2/PageSlide)\n\n### 演示地址：\n[点击这里](http://huahua2.github.io/PageSlide)\n\n### 效果截图：\n\n<img src=\"https://raw.githubusercontent.com/huahua2/PageSlide/d36ab38a2f393ad149415217797bdbbaca420bc2/img/1.png\"/>\n\n<img src=\"https://raw.githubusercontent.com/huahua2/PageSlide/d36ab38a2f393ad149415217797bdbbaca420bc2/img/2.png\" style=\"display:block;\"/>\n","source":"_posts/PageSlide.md","raw":"title: PagesSlide\ndate: 2015-8-7 9:23\ntags:\n- css3\ncategories: 项目实战\n---\n### PageSlide介绍\n\n用纯CSS3实现页面切换滑动效果，底部切换使用的radio实现选中效果,图标采用的font-face,切换页面\n后标题和简介有上下淡出和左右淡出两种效果。\n<!--more-->\n### 源码地址：\n[点击这里](https://github.com/huahua2/PageSlide)\n\n### 演示地址：\n[点击这里](http://huahua2.github.io/PageSlide)\n\n### 效果截图：\n\n<img src=\"https://raw.githubusercontent.com/huahua2/PageSlide/d36ab38a2f393ad149415217797bdbbaca420bc2/img/1.png\"/>\n\n<img src=\"https://raw.githubusercontent.com/huahua2/PageSlide/d36ab38a2f393ad149415217797bdbbaca420bc2/img/2.png\" style=\"display:block;\"/>\n","slug":"PageSlide","published":1,"updated":"2016-01-27T07:12:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijwi82ja0016h7kx2zxol45i"}],"PostAsset":[],"PostCategory":[{"post_id":"cijwi82he0000h7kxwtoolcle","category_id":"cijwi82hk0001h7kxwosdhlqm","_id":"cijwi82hn0004h7kxmiiinttn"},{"post_id":"cijwi82i50007h7kxvzf0hmvu","category_id":"cijwi82i70008h7kxkfdmlhun","_id":"cijwi82i8000bh7kxfakfpjjc"},{"post_id":"cijwi82ia000ch7kxqfjey7fe","category_id":"cijwi82hk0001h7kxwosdhlqm","_id":"cijwi82ib000dh7kxo8ivni9d"},{"post_id":"cijwi82io000hh7kxri09x5n0","category_id":"cijwi82hk0001h7kxwosdhlqm","_id":"cijwi82iq000ih7kxxnheeof3"},{"post_id":"cijwi82iu000lh7kxa2h2rrop","category_id":"cijwi82hk0001h7kxwosdhlqm","_id":"cijwi82iv000mh7kxqm4okwq7"},{"post_id":"cijwi82iy000sh7kxcqd0qfzh","category_id":"cijwi82hk0001h7kxwosdhlqm","_id":"cijwi82j0000th7kxwknn115q"},{"post_id":"cijwi82j1000vh7kxuj1s204x","category_id":"cijwi82i70008h7kxkfdmlhun","_id":"cijwi82j2000wh7kxkxakqdli"},{"post_id":"cijwi82j4000zh7kx8t5zfos6","category_id":"cijwi82hk0001h7kxwosdhlqm","_id":"cijwi82j50010h7kx3r2n5tvy"},{"post_id":"cijwi82j70012h7kxe0v9x4dx","category_id":"cijwi82hk0001h7kxwosdhlqm","_id":"cijwi82j80013h7kxhzd569vo"},{"post_id":"cijwi82ja0016h7kx2zxol45i","category_id":"cijwi82ja0017h7kx7eej8y50","_id":"cijwi82jb0019h7kxllz64usq"},{"post_id":"cijwi82iw000oh7kxupt2z3rw","category_id":"cijwi82hk0001h7kxwosdhlqm","_id":"cijwic7pb0000hikx66yz116t"}],"PostTag":[{"post_id":"cijwi82he0000h7kxwtoolcle","tag_id":"cijwi82hk0002h7kxm6fkxwfb","_id":"cijwi82hn0005h7kx5hl2v5z7"},{"post_id":"cijwi82he0000h7kxwtoolcle","tag_id":"cijwi82hn0003h7kxocfr4g6l","_id":"cijwi82ho0006h7kx0rrvi1ap"},{"post_id":"cijwi82i50007h7kxvzf0hmvu","tag_id":"cijwi82i80009h7kxzsdjywhb","_id":"cijwi82i8000ah7kxbeetqxwo"},{"post_id":"cijwi82ia000ch7kxqfjey7fe","tag_id":"cijwi82hn0003h7kxocfr4g6l","_id":"cijwi82ic000fh7kxvaj5hv5q"},{"post_id":"cijwi82ia000ch7kxqfjey7fe","tag_id":"cijwi82ib000eh7kx80qhvf41","_id":"cijwi82ic000gh7kxu33z8khn"},{"post_id":"cijwi82io000hh7kxri09x5n0","tag_id":"cijwi82iq000jh7kxmpogluw6","_id":"cijwi82iq000kh7kxb9o6mcn7"},{"post_id":"cijwi82iu000lh7kxa2h2rrop","tag_id":"cijwi82iq000jh7kxmpogluw6","_id":"cijwi82iv000nh7kxxxee5atv"},{"post_id":"cijwi82iw000oh7kxupt2z3rw","tag_id":"cijwi82ix000qh7kxz06noyxe","_id":"cijwi82iy000rh7kxxst5cnd9"},{"post_id":"cijwi82iy000sh7kxcqd0qfzh","tag_id":"cijwi82hn0003h7kxocfr4g6l","_id":"cijwi82j0000uh7kx6wmtrkib"},{"post_id":"cijwi82j1000vh7kxuj1s204x","tag_id":"cijwi82j2000xh7kxybr9x8ia","_id":"cijwi82j3000yh7kxvmw2gh36"},{"post_id":"cijwi82j4000zh7kx8t5zfos6","tag_id":"cijwi82ib000eh7kx80qhvf41","_id":"cijwi82j60011h7kxu1f9rehu"},{"post_id":"cijwi82j70012h7kxe0v9x4dx","tag_id":"cijwi82j80014h7kxifjmaeo1","_id":"cijwi82j80015h7kxhkep0gw0"},{"post_id":"cijwi82ja0016h7kx2zxol45i","tag_id":"cijwi82j80014h7kxifjmaeo1","_id":"cijwi82jb0018h7kxf50h9iou"}],"Tag":[{"name":"markdown","_id":"cijwi82hk0002h7kxm6fkxwfb"},{"name":"Hexo","_id":"cijwi82hn0003h7kxocfr4g6l"},{"name":"随笔","_id":"cijwi82i80009h7kxzsdjywhb"},{"name":"git","_id":"cijwi82ib000eh7kx80qhvf41"},{"name":"webapp","_id":"cijwi82iq000jh7kxmpogluw6"},{"name":"js","_id":"cijwi82ix000qh7kxz06noyxe"},{"name":"hello world","_id":"cijwi82j2000xh7kxybr9x8ia"},{"name":"css3","_id":"cijwi82j80014h7kxifjmaeo1"}]}}